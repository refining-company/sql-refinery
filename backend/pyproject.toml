[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sql-refining-backend"
version = "0.0.1"
description = "SQL language server for data engineering, business intelligence and analytics"
authors = ["The Data Refining Company"]
readme = "../README.md"
license = "MIT"
packages = [{include = "src"}, {include = "tests"}]

[tool.poetry.dependencies]
python = "^3.12"
attrs = "24.2.0"
cattrs = "24.1.2"
debugpy = "1.8.7"
iniconfig = "2.0.0"
Levenshtein = "0.26.0"
lsprotocol = "2023.0.1"
packaging = "24.1"
pluggy = "1.5.0"
pygls = "1.3.1"
pytest = "8.3.3"
pytest-lsp = "0.4.3"
pytest-snapshot = "0.9.0"
RapidFuzz = "3.10.0"
setuptools = "75.1.0"
tree-sitter = "0.23.0"
tree-sitter-sql-bigquery = {git = "https://github.com/ilyakochik/tree-sitter-sql-bigquery", rev = "9ace9408a3b89f770c11eed22af6fb58961ec512"}

[tool.poetry.group.dev.dependencies]
black = "^24.0.0"
ruff = "^0.4.0"
mypy = "^1.10.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"

[tool.poetry.scripts]
sql-refining-server = "src.server:main"


[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--asyncio-mode=auto",
]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 120
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "PT", # flake8-pytest-style
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "W293", # blank line contains whitespace
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
files = ["src", "tests"]
exclude = [
    "venv/",
    ".venv/",
    "dist/",
    "build/",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false