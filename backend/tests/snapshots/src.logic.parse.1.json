{
  "tree": "<Tree>",
  "all_queries": [
    "<Query>" ],
  "all_expressions": {
    "(\"Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))\", ('Column(?.?.date_month)',))": [
      { "Expression at editor.sql:4:5 = Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))": {
          "columns": [
            { "Column(?.?.date_month)": [
                "date_month",
                "date_month" ] } ],
          "alias": "date_year" } } ],
    "(\"Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), 'Americas'), 'AMER'), Casewhen_clause(In(Column(?.countries.region), Struct('Europe', 'Africa')), 'EMEA'), Casewhen_clause(=(Column(?.countries.region), 'Asia'), 'APAC'), Caseelse_clause(Null())))\", ('Column(?.countries.region)',))": [
      { "Expression at editor.sql:6:5 = Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), 'Americas'), 'AMER'), Casewhen_clause(In(Column(?.countries.region), Struct('Europe', 'Africa')), 'EMEA'), Casewhen_clause(=(Column(?.countries.region), 'Asia'), 'APAC'), Caseelse_clause(Null())))": {
          "columns": [
            { "Column(?.countries.region)": [
                "c.region",
                "c.region",
                "c.region" ] } ],
          "alias": "macro_region" } } ],
    "(\"Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('IT'), Argument('Non-IT')))\", ('Column(?.accounts.industry)',))": [
      { "Expression at editor.sql:13:5 = Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('IT'), Argument('Non-IT')))": {
          "columns": [
            { "Column(?.accounts.industry)": [
                "a.industry",
                "a.industry" ] } ],
          "alias": "industry_it" } } ],
    "('Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))', ('Column(?.accounts_revenue.revenue)',))": [
      { "Expression at editor.sql:14:5 = Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))": {
          "columns": [
            { "Column(?.accounts_revenue.revenue)": [
                "ar.revenue",
                "ar.revenue" ] } ],
          "alias": "revenue" } } ],
    "('Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))', ('Column(?.accounts_revenue.account_id)',))": [
      { "Expression at editor.sql:15:5 = Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))": {
          "columns": [
            { "Column(?.accounts_revenue.account_id)": [
                "ar.account_id",
                "ar.account_id" ] } ],
          "alias": "accounts" } } ],
    "('Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))', ('Column(?.accounts_revenue.account_id)', 'Column(?.accounts_revenue.revenue)'))": [
      { "Expression at editor.sql:16:5 = Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))": {
          "columns": [
            { "Column(?.accounts_revenue.revenue)": [
                "ar.revenue",
                "ar.revenue" ] },
            { "Column(?.accounts_revenue.account_id)": [
                "ar.account_id",
                "ar.account_id" ] } ],
          "alias": "revenue_per_account" } } ] } }