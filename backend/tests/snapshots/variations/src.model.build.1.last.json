{
  "Semantics(columns=[model.Column(?.?.revenue), model.Column(?.?.contract_duration_days), model.Column(?.?.revenue_core), model.Column(?.?.revenue_aux), model.Column(?.deals.contract_end_date), model.Column(?.deals.contract_start_date), model.Column(?.orders.product), model.Column(?.orders.value), model.Column(?.t.deals), model.Column(?.t.revenue_core), model.Column(?.t.revenue_aux), model.Column(?.t.revenue), model.Column(?.?.date_day), model.Column(?.deals_signed.deal_id), model.Column(?.deals_signed.revenue_core_day), model.Column(?.deals_signed.revenue_aux_day), model.Column(?.deals_signed.revenue_day), model.Column(?.date_ranges.date_day), model.Column(?.deals_signed.contract_start_date), model.Column(?.deals_signed.contract_end_date), model.Column(?.t.revenue_12m), model.Column(?.countries.region), model.Column(?.?.account_id), model.Column(?.?.date_month), model.Column(?.accounts.industry), model.Column(?.accounts_revenue.revenue), model.Column(?.accounts_revenue.account_id)], expressions=[model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue), model.Column(?.?.contract_duration_days)))), model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_core), model.Column(?.?.contract_duration_days)))), model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_aux), model.Column(?.?.contract_duration_days)))), model.Expression(reliability=1, Expression(Binary_expression(-(Julianday(model.Column(?.deals.contract_end_date)), Julianday(model.Column(?.deals.contract_start_date))), 1))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), model.Column(?.orders.value)), Caseelse_clause(0)))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Training', 'Consulting')), model.Column(?.orders.value)), Caseelse_clause(0)))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.orders.value))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.deals))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_core))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_aux))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue))))), model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_day)), Argument('start of month')))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.deal_id))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_core_day))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_aux_day))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_day))))), model.Expression(reliability=1, Expression(Binary_expression(>=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_start_date))), <=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_end_date)))))), model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(model.Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(model.Column(?.t.revenue_12m), 300), <=(model.Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(model.Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))), model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(model.Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(model.Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))), model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_month)), Argument('start of year')))), model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(model.Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(model.Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))), model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(model.Column(?.accounts_revenue.account_id))))), model.Expression(reliability=1, Expression(Binary_expression(Sum(model.Column(?.accounts_revenue.revenue)), Count(model.Column(?.accounts_revenue.account_id))))), model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(model.Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))), model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(model.Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(model.Column(?.accounts_revenue.revenue)), 300), <=(Sum(model.Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(model.Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))], expr_code_to_model={code.Expression(0-accounts.sql:27:4-27:36): model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue), model.Column(?.?.contract_duration_days)))), code.Expression(0-accounts.sql:28:4-28:41): model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_core), model.Column(?.?.contract_duration_days)))), code.Expression(0-accounts.sql:29:4-29:40): model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_aux), model.Column(?.?.contract_duration_days)))), code.Expression(0-accounts.sql:36:8-36:77): model.Expression(reliability=1, Expression(Binary_expression(-(Julianday(model.Column(?.deals.contract_end_date)), Julianday(model.Column(?.deals.contract_start_date))), 1))), code.Expression(0-accounts.sql:37:8-37:105): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), model.Column(?.orders.value)), Caseelse_clause(0)))))), code.Expression(0-accounts.sql:38:8-38:86): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Training', 'Consulting')), model.Column(?.orders.value)), Caseelse_clause(0)))))), code.Expression(0-accounts.sql:39:8-39:20): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.orders.value))))), code.Expression(0-accounts.sql:53:4-53:16): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.deals))))), code.Expression(0-accounts.sql:54:4-54:23): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_core))))), code.Expression(0-accounts.sql:55:4-55:22): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_aux))))), code.Expression(0-accounts.sql:56:4-56:18): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue))))), code.Expression(0-accounts.sql:60:8-60:40): model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_day)), Argument('start of month')))), code.Expression(0-accounts.sql:62:8-62:25): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.deal_id))))), code.Expression(0-accounts.sql:63:8-63:32): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_core_day))))), code.Expression(0-accounts.sql:64:8-64:31): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_aux_day))))), code.Expression(0-accounts.sql:65:8-65:27): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_day))))), code.Expression(0-accounts.sql:68:16-69:57): model.Expression(reliability=1, Expression(Binary_expression(>=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_start_date))), <=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_end_date)))))), code.Expression(0-accounts.sql:80:4-85:7): model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(model.Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(model.Column(?.t.revenue_12m), 300), <=(model.Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(model.Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))), code.Expression(0-accounts.sql:97:8-101:11): model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(1-revenue.sql:6:4-10:7): model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(1-revenue.sql:32:4-36:7): model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(0-accounts.sql:103:8-107:9): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(model.Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(model.Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))), code.Expression(1-revenue.sql:5:4-5:37): model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_month)), Argument('start of year')))), code.Expression(1-revenue.sql:11:4-15:7): model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(model.Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(model.Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))), code.Expression(1-revenue.sql:17:4-17:19): model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue))))), code.Expression(1-revenue.sql:45:4-45:33): model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue))))), code.Expression(1-revenue.sql:18:4-18:33): model.Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(model.Column(?.accounts_revenue.account_id))))), code.Expression(1-revenue.sql:19:4-19:51): model.Expression(reliability=1, Expression(Binary_expression(Sum(model.Column(?.accounts_revenue.revenue)), Count(model.Column(?.accounts_revenue.account_id))))), code.Expression(1-revenue.sql:38:4-38:70): model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(model.Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))), code.Expression(1-revenue.sql:39:4-44:7): model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(model.Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(model.Column(?.accounts_revenue.revenue)), 300), <=(Sum(model.Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(model.Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))})": {
    "columns": [
      "model.Column(?.?.account_id)",
      "model.Column(?.?.contract_duration_days)",
      "model.Column(?.?.date_day)",
      "model.Column(?.?.date_month)",
      "model.Column(?.?.revenue)",
      "model.Column(?.?.revenue_aux)",
      "model.Column(?.?.revenue_core)",
      "model.Column(?.accounts.industry)",
      "model.Column(?.accounts_revenue.account_id)",
      "model.Column(?.accounts_revenue.revenue)",
      "model.Column(?.countries.region)",
      "model.Column(?.date_ranges.date_day)",
      "model.Column(?.deals.contract_end_date)",
      "model.Column(?.deals.contract_start_date)",
      "model.Column(?.deals_signed.contract_end_date)",
      "model.Column(?.deals_signed.contract_start_date)",
      "model.Column(?.deals_signed.deal_id)",
      "model.Column(?.deals_signed.revenue_aux_day)",
      "model.Column(?.deals_signed.revenue_core_day)",
      "model.Column(?.deals_signed.revenue_day)",
      "model.Column(?.orders.product)",
      "model.Column(?.orders.value)",
      "model.Column(?.t.deals)",
      "model.Column(?.t.revenue)",
      "model.Column(?.t.revenue_12m)",
      "model.Column(?.t.revenue_aux)",
      "model.Column(?.t.revenue_core)" ],
    "expr_code_to_model": {
      "code.Expression(0-accounts.sql:103:8-107:9) = SUM(revenue) OVER (\n            PARTITION BY account_id \n            ORDER BY date_month \n            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW\n        )": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(model.Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(model.Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))))",
      "code.Expression(0-accounts.sql:27:4-27:36) = revenue / contract_duration_days": "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue), model.Column(?.?.contract_duration_days))))",
      "code.Expression(0-accounts.sql:28:4-28:41) = revenue_core / contract_duration_days": "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_core), model.Column(?.?.contract_duration_days))))",
      "code.Expression(0-accounts.sql:29:4-29:40) = revenue_aux / contract_duration_days": "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_aux), model.Column(?.?.contract_duration_days))))",
      "code.Expression(0-accounts.sql:36:8-36:77) = julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1": "model.Expression(reliability=1, Expression(Binary_expression(-(Julianday(model.Column(?.deals.contract_end_date)), Julianday(model.Column(?.deals.contract_start_date))), 1)))",
      "code.Expression(0-accounts.sql:37:8-37:105) = SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN o.value ELSE 0 END)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), model.Column(?.orders.value)), Caseelse_clause(0))))))",
      "code.Expression(0-accounts.sql:38:8-38:86) = SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Training', 'Consulting')), model.Column(?.orders.value)), Caseelse_clause(0))))))",
      "code.Expression(0-accounts.sql:39:8-39:20) = SUM(o.value)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.orders.value)))))",
      "code.Expression(0-accounts.sql:53:4-53:16) = AVG(t.deals)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.deals)))))",
      "code.Expression(0-accounts.sql:54:4-54:23) = SUM(t.revenue_core)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_core)))))",
      "code.Expression(0-accounts.sql:55:4-55:22) = SUM(t.revenue_aux)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_aux)))))",
      "code.Expression(0-accounts.sql:56:4-56:18) = SUM(t.revenue)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue)))))",
      "code.Expression(0-accounts.sql:60:8-60:40) = DATE(date_day, 'start of month')": "model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_day)), Argument('start of month'))))",
      "code.Expression(0-accounts.sql:62:8-62:25) = COUNT(ds.deal_id)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.deal_id)))))",
      "code.Expression(0-accounts.sql:63:8-63:32) = SUM(ds.revenue_core_day)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_core_day)))))",
      "code.Expression(0-accounts.sql:64:8-64:31) = SUM(ds.revenue_aux_day)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_aux_day)))))",
      "code.Expression(0-accounts.sql:65:8-65:27) = SUM(ds.revenue_day)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_day)))))",
      "code.Expression(0-accounts.sql:68:16-69:57) = dr.date_day >= date(ds.contract_start_date)\n            AND dr.date_day <= date(ds.contract_end_date)": "model.Expression(reliability=1, Expression(Binary_expression(>=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_start_date))), <=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_end_date))))))",
      "code.Expression(0-accounts.sql:80:4-85:7) = CASE \n        WHEN t.revenue_12m <= 300 THEN 'Small'\n        WHEN t.revenue_12m > 300 AND t.revenue_12m <= 600 THEN 'Medium'\n        WHEN t.revenue_12m > 600 THEN 'Large'\n        ELSE NULL\n    END": "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(model.Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(model.Column(?.t.revenue_12m), 300), <=(model.Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(model.Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null()))))",
      "code.Expression(0-accounts.sql:97:8-101:11) = CASE\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n            ELSE NULL\n        END": "model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))",
      "code.Expression(1-revenue.sql:11:4-15:7) = CASE \n        WHEN a.industry = 'Information Technology' THEN 'Tech'\n        WHEN a.industry IS NULL THEN NULL\n        ELSE 'Other'\n    END": "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(model.Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(model.Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other'))))",
      "code.Expression(1-revenue.sql:17:4-17:19) = SUM(ar.revenue)": "model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue)))))",
      "code.Expression(1-revenue.sql:18:4-18:33) = COUNT(DISTINCT ar.account_id)": "model.Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(model.Column(?.accounts_revenue.account_id)))))",
      "code.Expression(1-revenue.sql:19:4-19:51) = SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)": "model.Expression(reliability=1, Expression(Binary_expression(Sum(model.Column(?.accounts_revenue.revenue)), Count(model.Column(?.accounts_revenue.account_id)))))",
      "code.Expression(1-revenue.sql:32:4-36:7) = CASE\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n        ELSE NULL\n    END": "model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))",
      "code.Expression(1-revenue.sql:38:4-38:70) = IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')": "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(model.Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other'))))",
      "code.Expression(1-revenue.sql:39:4-44:7) = CASE \n        WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small'\n        WHEN SUM(accounts_revenue.revenue) > 300 AND SUM(accounts_revenue.revenue) <= 600 THEN 'Medium'\n        WHEN SUM(accounts_revenue.revenue) > 600 THEN 'Large'\n        ELSE NULL\n    END": "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(model.Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(model.Column(?.accounts_revenue.revenue)), 300), <=(Sum(model.Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(model.Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))",
      "code.Expression(1-revenue.sql:45:4-45:33) = SUM(accounts_revenue.revenue)": "model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue)))))",
      "code.Expression(1-revenue.sql:5:4-5:37) = date(date_month, 'start of year')": "model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_month)), Argument('start of year'))))",
      "code.Expression(1-revenue.sql:6:4-10:7) = CASE\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n        ELSE NULL\n    END": "model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))" },
    "expressions": [
      "model.Expression(reliability=1, Expression(Binary_expression(-(Julianday(model.Column(?.deals.contract_end_date)), Julianday(model.Column(?.deals.contract_start_date))), 1)))",
      "model.Expression(reliability=1, Expression(Binary_expression(>=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_start_date))), <=(model.Column(?.date_ranges.date_day), Date(model.Column(?.deals_signed.contract_end_date))))))",
      "model.Expression(reliability=1, Expression(Binary_expression(Sum(model.Column(?.accounts_revenue.revenue)), Count(model.Column(?.accounts_revenue.account_id)))))",
      "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue), model.Column(?.?.contract_duration_days))))",
      "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_aux), model.Column(?.?.contract_duration_days))))",
      "model.Expression(reliability=1, Expression(Binary_expression(model.Column(?.?.revenue_core), model.Column(?.?.contract_duration_days))))",
      "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(model.Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(model.Column(?.accounts_revenue.revenue)), 300), <=(Sum(model.Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(model.Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))",
      "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(model.Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(model.Column(?.t.revenue_12m), 300), <=(model.Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(model.Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null()))))",
      "model.Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(model.Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(model.Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other'))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_day)), Argument('start of month'))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier(), Argument(model.Column(?.?.date_month)), Argument('start of year'))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(model.Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other'))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), model.Column(?.orders.value)), Caseelse_clause(0))))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(model.Column(?.orders.product), Struct('Training', 'Consulting')), model.Column(?.orders.value)), Caseelse_clause(0))))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(model.Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(model.Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.deal_id)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_aux_day)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_core_day)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.deals_signed.revenue_day)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.orders.value)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.deals)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_aux)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Argument(model.Column(?.t.revenue_core)))))",
      "model.Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(model.Column(?.accounts_revenue.account_id)))))",
      "model.Expression(reliability=2, Expression(Function_call(Identifier, Argument(model.Column(?.accounts_revenue.revenue)))))",
      "model.Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(model.Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(model.Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))" ] } }