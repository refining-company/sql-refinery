{
  "Semantics(columns=[Column(?.?.revenue), Column(?.?.contract_duration_days), Column(?.?.revenue_core), Column(?.?.revenue_aux), Column(?.deals.contract_end_date), Column(?.deals.contract_start_date), Column(?.orders.product), Column(?.orders.value), Column(?.t.deals), Column(?.t.revenue_core), Column(?.t.revenue_aux), Column(?.t.revenue), Column(?.?.date_day), Column(?.deals_signed.deal_id), Column(?.deals_signed.revenue_core_day), Column(?.deals_signed.revenue_aux_day), Column(?.deals_signed.revenue_day), Column(?.date_ranges.date_day), Column(?.deals_signed.contract_start_date), Column(?.deals_signed.contract_end_date), Column(?.t.revenue_12m), Column(?.countries.region), Column(?.?.account_id), Column(?.?.date_month), Column(?.accounts.industry), Column(?.accounts_revenue.revenue), Column(?.accounts_revenue.account_id)], expressions=[Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days)))), Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days)))), Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days)))), Expression(reliability=1, Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0)))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0)))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.orders.value))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.deals))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue))))), Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month')))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day))))), Expression(reliability=1, Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date)))))), Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))), Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))), Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))), Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))), Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))), Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))), Expression(reliability=1, Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))), Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))), Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))], expr_code_to_model={code.Expression(./tests/inputs/codebase/0-accounts.sql:27:4-27:36): Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days)))), code.Expression(./tests/inputs/codebase/0-accounts.sql:28:4-28:41): Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days)))), code.Expression(./tests/inputs/codebase/0-accounts.sql:29:4-29:40): Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days)))), code.Expression(./tests/inputs/codebase/0-accounts.sql:36:8-36:77): Expression(reliability=1, Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1))), code.Expression(./tests/inputs/codebase/0-accounts.sql:37:8-37:105): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0)))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:38:8-38:86): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0)))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:39:8-39:20): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.orders.value))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:53:4-53:16): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.deals))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:54:4-54:23): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:55:4-55:22): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:56:4-56:18): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:60:8-60:40): Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month')))), code.Expression(./tests/inputs/codebase/0-accounts.sql:62:8-62:25): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:63:8-63:32): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:64:8-64:31): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:65:8-65:27): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:68:16-69:57): Expression(reliability=1, Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date)))))), code.Expression(./tests/inputs/codebase/0-accounts.sql:80:4-85:7): Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))), code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11): Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7): Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7): Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))), code.Expression(./tests/inputs/codebase/0-accounts.sql:103:8-107:9): Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))), code.Expression(./tests/inputs/codebase/1-revenue.sql:5:4-5:37): Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))), code.Expression(./tests/inputs/codebase/1-revenue.sql:11:4-15:7): Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))), code.Expression(./tests/inputs/codebase/1-revenue.sql:17:4-17:19): Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))), code.Expression(./tests/inputs/codebase/1-revenue.sql:45:4-45:33): Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))), code.Expression(./tests/inputs/codebase/1-revenue.sql:18:4-18:33): Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))), code.Expression(./tests/inputs/codebase/1-revenue.sql:19:4-19:51): Expression(reliability=1, Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))), code.Expression(./tests/inputs/codebase/1-revenue.sql:38:4-38:70): Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))), code.Expression(./tests/inputs/codebase/1-revenue.sql:39:4-44:7): Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))})": {
    "columns": [
      { "Column(?.?.account_id)": {
          "_code": "[code.Column(?.?.account_id)]",
          "dataset": null,
          "table": null,
          "column": "account_id" } },
      { "Column(?.?.contract_duration_days)": {
          "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
          "dataset": null,
          "table": null,
          "column": "contract_duration_days" } },
      { "Column(?.?.date_day)": {
          "_code": "[code.Column(?.?.date_day)]",
          "dataset": null,
          "table": null,
          "column": "date_day" } },
      { "Column(?.?.date_month)": {
          "_code": "[code.Column(?.?.date_month), code.Column(?.?.date_month)]",
          "dataset": null,
          "table": null,
          "column": "date_month" } },
      { "Column(?.?.revenue)": {
          "_code": "[code.Column(?.?.revenue), code.Column(?.?.revenue)]",
          "dataset": null,
          "table": null,
          "column": "revenue" } },
      { "Column(?.?.revenue_aux)": {
          "_code": "[code.Column(?.?.revenue_aux)]",
          "dataset": null,
          "table": null,
          "column": "revenue_aux" } },
      { "Column(?.?.revenue_core)": {
          "_code": "[code.Column(?.?.revenue_core)]",
          "dataset": null,
          "table": null,
          "column": "revenue_core" } },
      { "Column(?.accounts.industry)": {
          "_code": "[code.Column(?.a.industry), code.Column(?.a.industry), code.Column(?.accounts.industry)]",
          "dataset": null,
          "table": "accounts",
          "column": "industry" } },
      { "Column(?.accounts_revenue.account_id)": {
          "_code": "[code.Column(?.ar.account_id), code.Column(?.ar.account_id)]",
          "dataset": null,
          "table": "accounts_revenue",
          "column": "account_id" } },
      { "Column(?.accounts_revenue.revenue)": {
          "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
          "dataset": null,
          "table": "accounts_revenue",
          "column": "revenue" } },
      { "Column(?.countries.region)": {
          "_code": "[code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region)]",
          "dataset": null,
          "table": "countries",
          "column": "region" } },
      { "Column(?.date_ranges.date_day)": {
          "_code": "[code.Column(?.dr.date_day), code.Column(?.dr.date_day)]",
          "dataset": null,
          "table": "date_ranges",
          "column": "date_day" } },
      { "Column(?.deals.contract_end_date)": {
          "_code": "[code.Column(?.d.contract_end_date)]",
          "dataset": null,
          "table": "deals",
          "column": "contract_end_date" } },
      { "Column(?.deals.contract_start_date)": {
          "_code": "[code.Column(?.d.contract_start_date)]",
          "dataset": null,
          "table": "deals",
          "column": "contract_start_date" } },
      { "Column(?.deals_signed.contract_end_date)": {
          "_code": "[code.Column(?.ds.contract_end_date)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "contract_end_date" } },
      { "Column(?.deals_signed.contract_start_date)": {
          "_code": "[code.Column(?.ds.contract_start_date)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "contract_start_date" } },
      { "Column(?.deals_signed.deal_id)": {
          "_code": "[code.Column(?.ds.deal_id)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "deal_id" } },
      { "Column(?.deals_signed.revenue_aux_day)": {
          "_code": "[code.Column(?.ds.revenue_aux_day)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "revenue_aux_day" } },
      { "Column(?.deals_signed.revenue_core_day)": {
          "_code": "[code.Column(?.ds.revenue_core_day)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "revenue_core_day" } },
      { "Column(?.deals_signed.revenue_day)": {
          "_code": "[code.Column(?.ds.revenue_day)]",
          "dataset": null,
          "table": "deals_signed",
          "column": "revenue_day" } },
      { "Column(?.orders.product)": {
          "_code": "[code.Column(?.o.product), code.Column(?.o.product)]",
          "dataset": null,
          "table": "orders",
          "column": "product" } },
      { "Column(?.orders.value)": {
          "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
          "dataset": null,
          "table": "orders",
          "column": "value" } },
      { "Column(?.t.deals)": {
          "_code": "[code.Column(?.t.deals)]",
          "dataset": null,
          "table": "t",
          "column": "deals" } },
      { "Column(?.t.revenue)": {
          "_code": "[code.Column(?.t.revenue)]",
          "dataset": null,
          "table": "t",
          "column": "revenue" } },
      { "Column(?.t.revenue_12m)": {
          "_code": "[code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m)]",
          "dataset": null,
          "table": "t",
          "column": "revenue_12m" } },
      { "Column(?.t.revenue_aux)": {
          "_code": "[code.Column(?.t.revenue_aux)]",
          "dataset": null,
          "table": "t",
          "column": "revenue_aux" } },
      { "Column(?.t.revenue_core)": {
          "_code": "[code.Column(?.t.revenue_core)]",
          "dataset": null,
          "table": "t",
          "column": "revenue_core" } } ],
    "expressions": [
      { "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:80:4-85:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:80:4-85:7": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "80:4-85:7": {
                    "start_line": 80,
                    "start_char": 4,
                    "end_line": 85,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.t.revenue_12m)": {
                "_code": "[code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_12m" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))",
          "sql": "CASE \n        WHEN t.revenue_12m <= 300 THEN 'Small'\n        WHEN t.revenue_12m > 300 AND t.revenue_12m <= 600 THEN 'Medium'\n        WHEN t.revenue_12m > 600 THEN 'Large'\n        ELSE NULL\n    END" } },
      { "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:39:4-44:7)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:39:4-44:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "39:4-44:7": {
                    "start_line": 39,
                    "start_char": 4,
                    "end_line": 44,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null())))",
          "sql": "CASE \n        WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small'\n        WHEN SUM(accounts_revenue.revenue) > 300 AND SUM(accounts_revenue.revenue) <= 600 THEN 'Medium'\n        WHEN SUM(accounts_revenue.revenue) > 600 THEN 'Large'\n        ELSE NULL\n    END" } },
      { "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:11:4-15:7)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:11:4-15:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "11:4-15:7": {
                    "start_line": 11,
                    "start_char": 4,
                    "end_line": 15,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.accounts.industry)": {
                "_code": "[code.Column(?.a.industry), code.Column(?.a.industry), code.Column(?.accounts.industry)]",
                "dataset": null,
                "table": "accounts",
                "column": "industry" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))",
          "sql": "CASE \n        WHEN a.industry = 'Information Technology' THEN 'Tech'\n        WHEN a.industry IS NULL THEN NULL\n        ELSE 'Other'\n    END" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:60:8-60:40)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:60:8-60:40": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "60:8-60:40": {
                    "start_line": 60,
                    "start_char": 8,
                    "end_line": 60,
                    "end_char": 40 } } } } ],
          "columns": [
            { "Column(?.?.date_day)": {
                "_code": "[code.Column(?.?.date_day)]",
                "dataset": null,
                "table": null,
                "column": "date_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month')))",
          "sql": "DATE(date_day, 'start of month')" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:5:4-5:37)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:5:4-5:37": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "5:4-5:37": {
                    "start_line": 5,
                    "start_char": 4,
                    "end_line": 5,
                    "end_char": 37 } } } } ],
          "columns": [
            { "Column(?.?.date_month)": {
                "_code": "[code.Column(?.?.date_month), code.Column(?.?.date_month)]",
                "dataset": null,
                "table": null,
                "column": "date_month" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))",
          "sql": "date(date_month, 'start of year')" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:38:4-38:70)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:38:4-38:70": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "38:4-38:70": {
                    "start_line": 38,
                    "start_char": 4,
                    "end_line": 38,
                    "end_char": 70 } } } } ],
          "columns": [
            { "Column(?.accounts.industry)": {
                "_code": "[code.Column(?.a.industry), code.Column(?.a.industry), code.Column(?.accounts.industry)]",
                "dataset": null,
                "table": "accounts",
                "column": "industry" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))",
          "sql": "IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:37:8-37:105)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:37:8-37:105": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "37:8-37:105": {
                    "start_line": 37,
                    "start_char": 8,
                    "end_line": 37,
                    "end_char": 105 } } } } ],
          "columns": [
            { "Column(?.orders.product)": {
                "_code": "[code.Column(?.o.product), code.Column(?.o.product)]",
                "dataset": null,
                "table": "orders",
                "column": "product" } },
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0)))))",
          "sql": "SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN o.value ELSE 0 END)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:38:8-38:86)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:38:8-38:86": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "38:8-38:86": {
                    "start_line": 38,
                    "start_char": 8,
                    "end_line": 38,
                    "end_char": 86 } } } } ],
          "columns": [
            { "Column(?.orders.product)": {
                "_code": "[code.Column(?.o.product), code.Column(?.o.product)]",
                "dataset": null,
                "table": "orders",
                "column": "product" } },
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0)))))",
          "sql": "SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)" } },
      { "Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11), code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7), code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:97:8-101:11": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "97:8-101:11": {
                    "start_line": 97,
                    "start_char": 8,
                    "end_line": 101,
                    "end_char": 11 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:32:4-36:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "32:4-36:7": {
                    "start_line": 32,
                    "start_char": 4,
                    "end_line": 36,
                    "end_char": 7 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:6:4-10:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "6:4-10:7": {
                    "start_line": 6,
                    "start_char": 4,
                    "end_line": 10,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.countries.region)": {
                "_code": "[code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region)]",
                "dataset": null,
                "table": "countries",
                "column": "region" } } ],
          "reliability": 3,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))",
          "sql": "CASE\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n            ELSE NULL\n        END" } },
      { "Expression(reliability=1, Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1)))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:36:8-36:77)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:36:8-36:77": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "36:8-36:77": {
                    "start_line": 36,
                    "start_char": 8,
                    "end_line": 36,
                    "end_char": 77 } } } } ],
          "columns": [
            { "Column(?.deals.contract_end_date)": {
                "_code": "[code.Column(?.d.contract_end_date)]",
                "dataset": null,
                "table": "deals",
                "column": "contract_end_date" } },
            { "Column(?.deals.contract_start_date)": {
                "_code": "[code.Column(?.d.contract_start_date)]",
                "dataset": null,
                "table": "deals",
                "column": "contract_start_date" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1))",
          "sql": "julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1" } },
      { "Expression(reliability=1, Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:68:16-69:57)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:68:16-69:57": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "68:16-69:57": {
                    "start_line": 68,
                    "start_char": 16,
                    "end_line": 69,
                    "end_char": 57 } } } } ],
          "columns": [
            { "Column(?.date_ranges.date_day)": {
                "_code": "[code.Column(?.dr.date_day), code.Column(?.dr.date_day)]",
                "dataset": null,
                "table": "date_ranges",
                "column": "date_day" } },
            { "Column(?.deals_signed.contract_end_date)": {
                "_code": "[code.Column(?.ds.contract_end_date)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "contract_end_date" } },
            { "Column(?.deals_signed.contract_start_date)": {
                "_code": "[code.Column(?.ds.contract_start_date)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "contract_start_date" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date)))))",
          "sql": "dr.date_day >= date(ds.contract_start_date)\n            AND dr.date_day <= date(ds.contract_end_date)" } },
      { "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:27:4-27:36)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:27:4-27:36": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "27:4-27:36": {
                    "start_line": 27,
                    "start_char": 4,
                    "end_line": 27,
                    "end_char": 36 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue)": {
                "_code": "[code.Column(?.?.revenue), code.Column(?.?.revenue)]",
                "dataset": null,
                "table": null,
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days)))",
          "sql": "revenue / contract_duration_days" } },
      { "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:29:4-29:40)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:29:4-29:40": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "29:4-29:40": {
                    "start_line": 29,
                    "start_char": 4,
                    "end_line": 29,
                    "end_char": 40 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue_aux)": {
                "_code": "[code.Column(?.?.revenue_aux)]",
                "dataset": null,
                "table": null,
                "column": "revenue_aux" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days)))",
          "sql": "revenue_aux / contract_duration_days" } },
      { "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:28:4-28:41)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:28:4-28:41": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "28:4-28:41": {
                    "start_line": 28,
                    "start_char": 4,
                    "end_line": 28,
                    "end_char": 41 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue_core)": {
                "_code": "[code.Column(?.?.revenue_core)]",
                "dataset": null,
                "table": null,
                "column": "revenue_core" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days)))",
          "sql": "revenue_core / contract_duration_days" } },
      { "Expression(reliability=1, Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:19:4-19:51)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:19:4-19:51": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "19:4-19:51": {
                    "start_line": 19,
                    "start_char": 4,
                    "end_line": 19,
                    "end_char": 51 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.account_id)": {
                "_code": "[code.Column(?.ar.account_id), code.Column(?.ar.account_id)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "account_id" } },
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))",
          "sql": "SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:103:8-107:9)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:103:8-107:9": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "103:8-107:9": {
                    "start_line": 103,
                    "start_char": 8,
                    "end_line": 107,
                    "end_char": 9 } } } } ],
          "columns": [
            { "Column(?.?.account_id)": {
                "_code": "[code.Column(?.?.account_id)]",
                "dataset": null,
                "table": null,
                "column": "account_id" } },
            { "Column(?.?.date_month)": {
                "_code": "[code.Column(?.?.date_month), code.Column(?.?.date_month)]",
                "dataset": null,
                "table": null,
                "column": "date_month" } },
            { "Column(?.?.revenue)": {
                "_code": "[code.Column(?.?.revenue), code.Column(?.?.revenue)]",
                "dataset": null,
                "table": null,
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))",
          "sql": "SUM(revenue) OVER (\n            PARTITION BY account_id \n            ORDER BY date_month \n            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW\n        )" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:62:8-62:25)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:62:8-62:25": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "62:8-62:25": {
                    "start_line": 62,
                    "start_char": 8,
                    "end_line": 62,
                    "end_char": 25 } } } } ],
          "columns": [
            { "Column(?.deals_signed.deal_id)": {
                "_code": "[code.Column(?.ds.deal_id)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "deal_id" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id))))",
          "sql": "COUNT(ds.deal_id)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:64:8-64:31)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:64:8-64:31": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "64:8-64:31": {
                    "start_line": 64,
                    "start_char": 8,
                    "end_line": 64,
                    "end_char": 31 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_aux_day)": {
                "_code": "[code.Column(?.ds.revenue_aux_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_aux_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day))))",
          "sql": "SUM(ds.revenue_aux_day)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:63:8-63:32)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:63:8-63:32": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "63:8-63:32": {
                    "start_line": 63,
                    "start_char": 8,
                    "end_line": 63,
                    "end_char": 32 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_core_day)": {
                "_code": "[code.Column(?.ds.revenue_core_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_core_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day))))",
          "sql": "SUM(ds.revenue_core_day)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:65:8-65:27)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:65:8-65:27": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "65:8-65:27": {
                    "start_line": 65,
                    "start_char": 8,
                    "end_line": 65,
                    "end_char": 27 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_day)": {
                "_code": "[code.Column(?.ds.revenue_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day))))",
          "sql": "SUM(ds.revenue_day)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.orders.value)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:39:8-39:20)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:39:8-39:20": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "39:8-39:20": {
                    "start_line": 39,
                    "start_char": 8,
                    "end_line": 39,
                    "end_char": 20 } } } } ],
          "columns": [
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.orders.value))))",
          "sql": "SUM(o.value)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.deals)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:53:4-53:16)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:53:4-53:16": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "53:4-53:16": {
                    "start_line": 53,
                    "start_char": 4,
                    "end_line": 53,
                    "end_char": 16 } } } } ],
          "columns": [
            { "Column(?.t.deals)": {
                "_code": "[code.Column(?.t.deals)]",
                "dataset": null,
                "table": "t",
                "column": "deals" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.deals))))",
          "sql": "AVG(t.deals)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:56:4-56:18)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:56:4-56:18": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "56:4-56:18": {
                    "start_line": 56,
                    "start_char": 4,
                    "end_line": 56,
                    "end_char": 18 } } } } ],
          "columns": [
            { "Column(?.t.revenue)": {
                "_code": "[code.Column(?.t.revenue)]",
                "dataset": null,
                "table": "t",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue))))",
          "sql": "SUM(t.revenue)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:55:4-55:22)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:55:4-55:22": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "55:4-55:22": {
                    "start_line": 55,
                    "start_char": 4,
                    "end_line": 55,
                    "end_char": 22 } } } } ],
          "columns": [
            { "Column(?.t.revenue_aux)": {
                "_code": "[code.Column(?.t.revenue_aux)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_aux" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux))))",
          "sql": "SUM(t.revenue_aux)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:54:4-54:23)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:54:4-54:23": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "54:4-54:23": {
                    "start_line": 54,
                    "start_char": 4,
                    "end_line": 54,
                    "end_char": 23 } } } } ],
          "columns": [
            { "Column(?.t.revenue_core)": {
                "_code": "[code.Column(?.t.revenue_core)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_core" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core))))",
          "sql": "SUM(t.revenue_core)" } },
      { "Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:18:4-18:33)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:18:4-18:33": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "18:4-18:33": {
                    "start_line": 18,
                    "start_char": 4,
                    "end_line": 18,
                    "end_char": 33 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.account_id)": {
                "_code": "[code.Column(?.ar.account_id), code.Column(?.ar.account_id)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "account_id" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))",
          "sql": "COUNT(DISTINCT ar.account_id)" } },
      { "Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:17:4-17:19), code.Expression(./tests/inputs/codebase/1-revenue.sql:45:4-45:33)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:17:4-17:19": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "17:4-17:19": {
                    "start_line": 17,
                    "start_char": 4,
                    "end_line": 17,
                    "end_char": 19 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:45:4-45:33": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "45:4-45:33": {
                    "start_line": 45,
                    "start_char": 4,
                    "end_line": 45,
                    "end_char": 33 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 2,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))",
          "sql": "SUM(ar.revenue)" } } ],
    "expr_code_to_model": {
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:27:4-27:36) = code.Expression(revenue / contract_duration_days)': {'_node': '(binary_expression left: (identifier) right: (identifier))', 'columns': [{'code.Column(?.?.contract_duration_days)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'contract_duration_days', 'location': {'./tests/inputs/codebase/0-accounts.sql:27:14-27:36': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'27:14-27:36': {'start_line': 27, 'start_char': 14, 'end_line': 27, 'end_char': 36}}}}}}, {'code.Column(?.?.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:27:4-27:11': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'27:4-27:11': {'start_line': 27, 'start_char': 4, 'end_line': 27, 'end_char': 11}}}}}}], 'alias': 'revenue_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:27:4-27:36': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'27:4-27:36': {'start_line': 27, 'start_char': 4, 'end_line': 27, 'end_char': 36}}}}, 'sql': 'revenue / contract_duration_days'}}": {
        "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:27:4-27:36)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:27:4-27:36": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "27:4-27:36": {
                    "start_line": 27,
                    "start_char": 4,
                    "end_line": 27,
                    "end_char": 36 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue)": {
                "_code": "[code.Column(?.?.revenue), code.Column(?.?.revenue)]",
                "dataset": null,
                "table": null,
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue), Column(?.?.contract_duration_days)))",
          "sql": "revenue / contract_duration_days" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:28:4-28:41) = code.Expression(revenue_core / contract_duration_days)': {'_node': '(binary_expression left: (identifier) right: (identifier))', 'columns': [{'code.Column(?.?.contract_duration_days)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'contract_duration_days', 'location': {'./tests/inputs/codebase/0-accounts.sql:28:19-28:41': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'28:19-28:41': {'start_line': 28, 'start_char': 19, 'end_line': 28, 'end_char': 41}}}}}}, {'code.Column(?.?.revenue_core)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'revenue_core', 'location': {'./tests/inputs/codebase/0-accounts.sql:28:4-28:16': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'28:4-28:16': {'start_line': 28, 'start_char': 4, 'end_line': 28, 'end_char': 16}}}}}}], 'alias': 'revenue_core_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:28:4-28:41': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'28:4-28:41': {'start_line': 28, 'start_char': 4, 'end_line': 28, 'end_char': 41}}}}, 'sql': 'revenue_core / contract_duration_days'}}": {
        "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:28:4-28:41)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:28:4-28:41": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "28:4-28:41": {
                    "start_line": 28,
                    "start_char": 4,
                    "end_line": 28,
                    "end_char": 41 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue_core)": {
                "_code": "[code.Column(?.?.revenue_core)]",
                "dataset": null,
                "table": null,
                "column": "revenue_core" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue_core), Column(?.?.contract_duration_days)))",
          "sql": "revenue_core / contract_duration_days" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:29:4-29:40) = code.Expression(revenue_aux / contract_duration_days)': {'_node': '(binary_expression left: (identifier) right: (identifier))', 'columns': [{'code.Column(?.?.contract_duration_days)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'contract_duration_days', 'location': {'./tests/inputs/codebase/0-accounts.sql:29:18-29:40': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'29:18-29:40': {'start_line': 29, 'start_char': 18, 'end_line': 29, 'end_char': 40}}}}}}, {'code.Column(?.?.revenue_aux)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'revenue_aux', 'location': {'./tests/inputs/codebase/0-accounts.sql:29:4-29:15': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'29:4-29:15': {'start_line': 29, 'start_char': 4, 'end_line': 29, 'end_char': 15}}}}}}], 'alias': 'revenue_aux_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:29:4-29:40': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'29:4-29:40': {'start_line': 29, 'start_char': 4, 'end_line': 29, 'end_char': 40}}}}, 'sql': 'revenue_aux / contract_duration_days'}}": {
        "Expression(reliability=1, Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:29:4-29:40)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:29:4-29:40": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "29:4-29:40": {
                    "start_line": 29,
                    "start_char": 4,
                    "end_line": 29,
                    "end_char": 40 } } } } ],
          "columns": [
            { "Column(?.?.contract_duration_days)": {
                "_code": "[code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days), code.Column(?.?.contract_duration_days)]",
                "dataset": null,
                "table": null,
                "column": "contract_duration_days" } },
            { "Column(?.?.revenue_aux)": {
                "_code": "[code.Column(?.?.revenue_aux)]",
                "dataset": null,
                "table": null,
                "column": "revenue_aux" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Column(?.?.revenue_aux), Column(?.?.contract_duration_days)))",
          "sql": "revenue_aux / contract_duration_days" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:36:8-36:77) = code.Expression(julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1)': {'_node': '(binary_expression left: (binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (function_call function: (identifier) argument: (argument (identifier)))) right: (number))', 'columns': [{'code.Column(?.d.contract_end_date)': {'_node': '(identifier)', 'dataset': None, 'table': 'd', 'column': 'contract_end_date', 'location': {'./tests/inputs/codebase/0-accounts.sql:36:18-36:37': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'36:18-36:37': {'start_line': 36, 'start_char': 18, 'end_line': 36, 'end_char': 37}}}}}}, {'code.Column(?.d.contract_start_date)': {'_node': '(identifier)', 'dataset': None, 'table': 'd', 'column': 'contract_start_date', 'location': {'./tests/inputs/codebase/0-accounts.sql:36:51-36:72': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'36:51-36:72': {'start_line': 36, 'start_char': 51, 'end_line': 36, 'end_char': 72}}}}}}], 'alias': 'contract_duration_days', 'location': {'./tests/inputs/codebase/0-accounts.sql:36:8-36:77': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'36:8-36:77': {'start_line': 36, 'start_char': 8, 'end_line': 36, 'end_char': 77}}}}, 'sql': 'julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1'}}": {
        "Expression(reliability=1, Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1)))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:36:8-36:77)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:36:8-36:77": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "36:8-36:77": {
                    "start_line": 36,
                    "start_char": 8,
                    "end_line": 36,
                    "end_char": 77 } } } } ],
          "columns": [
            { "Column(?.deals.contract_end_date)": {
                "_code": "[code.Column(?.d.contract_end_date)]",
                "dataset": null,
                "table": "deals",
                "column": "contract_end_date" } },
            { "Column(?.deals.contract_start_date)": {
                "_code": "[code.Column(?.d.contract_start_date)]",
                "dataset": null,
                "table": "deals",
                "column": "contract_start_date" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(-(Julianday(Column(?.deals.contract_end_date)), Julianday(Column(?.deals.contract_start_date))), 1))",
          "sql": "julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1" } },
      "{\"code.Expression(./tests/inputs/codebase/0-accounts.sql:37:8-37:105) = code.Expression(SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN o.value ELSE 0 END))\": {'_node': '(function_call function: (identifier) argument: (argument (casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (identifier)) (caseelse_clause else_result: (number)))))', 'columns': [{'code.Column(?.o.product)': {'_node': '(identifier)', 'dataset': None, 'table': 'o', 'column': 'product', 'location': {'./tests/inputs/codebase/0-accounts.sql:37:22-37:31': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'37:22-37:31': {'start_line': 37, 'start_char': 22, 'end_line': 37, 'end_char': 31}}}}}}, {'code.Column(?.o.value)': {'_node': '(identifier)', 'dataset': None, 'table': 'o', 'column': 'value', 'location': {'./tests/inputs/codebase/0-accounts.sql:37:86-37:93': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'37:86-37:93': {'start_line': 37, 'start_char': 86, 'end_line': 37, 'end_char': 93}}}}}}], 'alias': 'revenue_core', 'location': {'./tests/inputs/codebase/0-accounts.sql:37:8-37:105': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'37:8-37:105': {'start_line': 37, 'start_char': 8, 'end_line': 37, 'end_char': 105}}}}, 'sql': \"SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN o.value ELSE 0 END)\"}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:37:8-37:105)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:37:8-37:105": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "37:8-37:105": {
                    "start_line": 37,
                    "start_char": 8,
                    "end_line": 37,
                    "end_char": 105 } } } } ],
          "columns": [
            { "Column(?.orders.product)": {
                "_code": "[code.Column(?.o.product), code.Column(?.o.product)]",
                "dataset": null,
                "table": "orders",
                "column": "product" } },
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Subscription Base', 'Subscription Premium')), Column(?.orders.value)), Caseelse_clause(0)))))",
          "sql": "SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN o.value ELSE 0 END)" } },
      "{\"code.Expression(./tests/inputs/codebase/0-accounts.sql:38:8-38:86) = code.Expression(SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END))\": {'_node': '(function_call function: (identifier) argument: (argument (casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (identifier)) (caseelse_clause else_result: (number)))))', 'columns': [{'code.Column(?.o.product)': {'_node': '(identifier)', 'dataset': None, 'table': 'o', 'column': 'product', 'location': {'./tests/inputs/codebase/0-accounts.sql:38:22-38:31': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'38:22-38:31': {'start_line': 38, 'start_char': 22, 'end_line': 38, 'end_char': 31}}}}}}, {'code.Column(?.o.value)': {'_node': '(identifier)', 'dataset': None, 'table': 'o', 'column': 'value', 'location': {'./tests/inputs/codebase/0-accounts.sql:38:67-38:74': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'38:67-38:74': {'start_line': 38, 'start_char': 67, 'end_line': 38, 'end_char': 74}}}}}}], 'alias': 'revenue_aux', 'location': {'./tests/inputs/codebase/0-accounts.sql:38:8-38:86': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'38:8-38:86': {'start_line': 38, 'start_char': 8, 'end_line': 38, 'end_char': 86}}}}, 'sql': \"SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)\"}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:38:8-38:86)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:38:8-38:86": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "38:8-38:86": {
                    "start_line": 38,
                    "start_char": 8,
                    "end_line": 38,
                    "end_char": 86 } } } } ],
          "columns": [
            { "Column(?.orders.product)": {
                "_code": "[code.Column(?.o.product), code.Column(?.o.product)]",
                "dataset": null,
                "table": "orders",
                "column": "product" } },
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(Column(?.orders.product), Struct('Training', 'Consulting')), Column(?.orders.value)), Caseelse_clause(0)))))",
          "sql": "SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:39:8-39:20) = code.Expression(SUM(o.value))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.o.value)': {'_node': '(identifier)', 'dataset': None, 'table': 'o', 'column': 'value', 'location': {'./tests/inputs/codebase/0-accounts.sql:39:12-39:19': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'39:12-39:19': {'start_line': 39, 'start_char': 12, 'end_line': 39, 'end_char': 19}}}}}}], 'alias': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:39:8-39:20': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'39:8-39:20': {'start_line': 39, 'start_char': 8, 'end_line': 39, 'end_char': 20}}}}, 'sql': 'SUM(o.value)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.orders.value)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:39:8-39:20)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:39:8-39:20": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "39:8-39:20": {
                    "start_line": 39,
                    "start_char": 8,
                    "end_line": 39,
                    "end_char": 20 } } } } ],
          "columns": [
            { "Column(?.orders.value)": {
                "_code": "[code.Column(?.o.value), code.Column(?.o.value), code.Column(?.o.value)]",
                "dataset": null,
                "table": "orders",
                "column": "value" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.orders.value))))",
          "sql": "SUM(o.value)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:53:4-53:16) = code.Expression(AVG(t.deals))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.t.deals)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'deals', 'location': {'./tests/inputs/codebase/0-accounts.sql:53:8-53:15': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'53:8-53:15': {'start_line': 53, 'start_char': 8, 'end_line': 53, 'end_char': 15}}}}}}], 'alias': 'deals', 'location': {'./tests/inputs/codebase/0-accounts.sql:53:4-53:16': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'53:4-53:16': {'start_line': 53, 'start_char': 4, 'end_line': 53, 'end_char': 16}}}}, 'sql': 'AVG(t.deals)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.deals)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:53:4-53:16)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:53:4-53:16": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "53:4-53:16": {
                    "start_line": 53,
                    "start_char": 4,
                    "end_line": 53,
                    "end_char": 16 } } } } ],
          "columns": [
            { "Column(?.t.deals)": {
                "_code": "[code.Column(?.t.deals)]",
                "dataset": null,
                "table": "t",
                "column": "deals" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.deals))))",
          "sql": "AVG(t.deals)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:54:4-54:23) = code.Expression(SUM(t.revenue_core))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.t.revenue_core)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_core', 'location': {'./tests/inputs/codebase/0-accounts.sql:54:8-54:22': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'54:8-54:22': {'start_line': 54, 'start_char': 8, 'end_line': 54, 'end_char': 22}}}}}}], 'alias': 'revenue_core', 'location': {'./tests/inputs/codebase/0-accounts.sql:54:4-54:23': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'54:4-54:23': {'start_line': 54, 'start_char': 4, 'end_line': 54, 'end_char': 23}}}}, 'sql': 'SUM(t.revenue_core)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:54:4-54:23)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:54:4-54:23": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "54:4-54:23": {
                    "start_line": 54,
                    "start_char": 4,
                    "end_line": 54,
                    "end_char": 23 } } } } ],
          "columns": [
            { "Column(?.t.revenue_core)": {
                "_code": "[code.Column(?.t.revenue_core)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_core" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue_core))))",
          "sql": "SUM(t.revenue_core)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:55:4-55:22) = code.Expression(SUM(t.revenue_aux))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.t.revenue_aux)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_aux', 'location': {'./tests/inputs/codebase/0-accounts.sql:55:8-55:21': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'55:8-55:21': {'start_line': 55, 'start_char': 8, 'end_line': 55, 'end_char': 21}}}}}}], 'alias': 'revenue_aux', 'location': {'./tests/inputs/codebase/0-accounts.sql:55:4-55:22': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'55:4-55:22': {'start_line': 55, 'start_char': 4, 'end_line': 55, 'end_char': 22}}}}, 'sql': 'SUM(t.revenue_aux)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:55:4-55:22)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:55:4-55:22": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "55:4-55:22": {
                    "start_line": 55,
                    "start_char": 4,
                    "end_line": 55,
                    "end_char": 22 } } } } ],
          "columns": [
            { "Column(?.t.revenue_aux)": {
                "_code": "[code.Column(?.t.revenue_aux)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_aux" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue_aux))))",
          "sql": "SUM(t.revenue_aux)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:56:4-56:18) = code.Expression(SUM(t.revenue))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.t.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:56:8-56:17': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'56:8-56:17': {'start_line': 56, 'start_char': 8, 'end_line': 56, 'end_char': 17}}}}}}], 'alias': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:56:4-56:18': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'56:4-56:18': {'start_line': 56, 'start_char': 4, 'end_line': 56, 'end_char': 18}}}}, 'sql': 'SUM(t.revenue)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.t.revenue)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:56:4-56:18)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:56:4-56:18": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "56:4-56:18": {
                    "start_line": 56,
                    "start_char": 4,
                    "end_line": 56,
                    "end_char": 18 } } } } ],
          "columns": [
            { "Column(?.t.revenue)": {
                "_code": "[code.Column(?.t.revenue)]",
                "dataset": null,
                "table": "t",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.t.revenue))))",
          "sql": "SUM(t.revenue)" } },
      "{\"code.Expression(./tests/inputs/codebase/0-accounts.sql:60:8-60:40) = code.Expression(DATE(date_day, 'start of month'))\": {'_node': '(function_call function: (identifier) argument: (argument (identifier)) argument: (argument (string)))', 'columns': [{'code.Column(?.?.date_day)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'date_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:60:13-60:21': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'60:13-60:21': {'start_line': 60, 'start_char': 13, 'end_line': 60, 'end_char': 21}}}}}}], 'alias': 'date_month', 'location': {'./tests/inputs/codebase/0-accounts.sql:60:8-60:40': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'60:8-60:40': {'start_line': 60, 'start_char': 8, 'end_line': 60, 'end_char': 40}}}}, 'sql': \"DATE(date_day, 'start of month')\"}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:60:8-60:40)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:60:8-60:40": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "60:8-60:40": {
                    "start_line": 60,
                    "start_char": 8,
                    "end_line": 60,
                    "end_char": 40 } } } } ],
          "columns": [
            { "Column(?.?.date_day)": {
                "_code": "[code.Column(?.?.date_day)]",
                "dataset": null,
                "table": null,
                "column": "date_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier(), Argument(Column(?.?.date_day)), Argument('start of month')))",
          "sql": "DATE(date_day, 'start of month')" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:62:8-62:25) = code.Expression(COUNT(ds.deal_id))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ds.deal_id)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'deal_id', 'location': {'./tests/inputs/codebase/0-accounts.sql:62:14-62:24': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'62:14-62:24': {'start_line': 62, 'start_char': 14, 'end_line': 62, 'end_char': 24}}}}}}], 'alias': 'deals', 'location': {'./tests/inputs/codebase/0-accounts.sql:62:8-62:25': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'62:8-62:25': {'start_line': 62, 'start_char': 8, 'end_line': 62, 'end_char': 25}}}}, 'sql': 'COUNT(ds.deal_id)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:62:8-62:25)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:62:8-62:25": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "62:8-62:25": {
                    "start_line": 62,
                    "start_char": 8,
                    "end_line": 62,
                    "end_char": 25 } } } } ],
          "columns": [
            { "Column(?.deals_signed.deal_id)": {
                "_code": "[code.Column(?.ds.deal_id)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "deal_id" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.deal_id))))",
          "sql": "COUNT(ds.deal_id)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:63:8-63:32) = code.Expression(SUM(ds.revenue_core_day))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ds.revenue_core_day)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'revenue_core_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:63:12-63:31': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'63:12-63:31': {'start_line': 63, 'start_char': 12, 'end_line': 63, 'end_char': 31}}}}}}], 'alias': 'revenue_core', 'location': {'./tests/inputs/codebase/0-accounts.sql:63:8-63:32': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'63:8-63:32': {'start_line': 63, 'start_char': 8, 'end_line': 63, 'end_char': 32}}}}, 'sql': 'SUM(ds.revenue_core_day)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:63:8-63:32)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:63:8-63:32": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "63:8-63:32": {
                    "start_line": 63,
                    "start_char": 8,
                    "end_line": 63,
                    "end_char": 32 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_core_day)": {
                "_code": "[code.Column(?.ds.revenue_core_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_core_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_core_day))))",
          "sql": "SUM(ds.revenue_core_day)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:64:8-64:31) = code.Expression(SUM(ds.revenue_aux_day))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ds.revenue_aux_day)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'revenue_aux_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:64:12-64:30': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'64:12-64:30': {'start_line': 64, 'start_char': 12, 'end_line': 64, 'end_char': 30}}}}}}], 'alias': 'revenue_aux', 'location': {'./tests/inputs/codebase/0-accounts.sql:64:8-64:31': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'64:8-64:31': {'start_line': 64, 'start_char': 8, 'end_line': 64, 'end_char': 31}}}}, 'sql': 'SUM(ds.revenue_aux_day)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:64:8-64:31)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:64:8-64:31": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "64:8-64:31": {
                    "start_line": 64,
                    "start_char": 8,
                    "end_line": 64,
                    "end_char": 31 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_aux_day)": {
                "_code": "[code.Column(?.ds.revenue_aux_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_aux_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_aux_day))))",
          "sql": "SUM(ds.revenue_aux_day)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:65:8-65:27) = code.Expression(SUM(ds.revenue_day))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ds.revenue_day)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'revenue_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:65:12-65:26': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'65:12-65:26': {'start_line': 65, 'start_char': 12, 'end_line': 65, 'end_char': 26}}}}}}], 'alias': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:65:8-65:27': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'65:8-65:27': {'start_line': 65, 'start_char': 8, 'end_line': 65, 'end_char': 27}}}}, 'sql': 'SUM(ds.revenue_day)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:65:8-65:27)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:65:8-65:27": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "65:8-65:27": {
                    "start_line": 65,
                    "start_char": 8,
                    "end_line": 65,
                    "end_char": 27 } } } } ],
          "columns": [
            { "Column(?.deals_signed.revenue_day)": {
                "_code": "[code.Column(?.ds.revenue_day)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "revenue_day" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.deals_signed.revenue_day))))",
          "sql": "SUM(ds.revenue_day)" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:68:16-69:57) = code.Expression(dr.date_day >= date(ds.contract_start_date)\\n            AND dr.date_day <= date(ds.contract_end_date))': {'_node': '(binary_expression left: (binary_expression left: (identifier) right: (function_call function: (identifier) argument: (argument (identifier)))) right: (binary_expression left: (identifier) right: (function_call function: (identifier) argument: (argument (identifier)))))', 'columns': [{'code.Column(?.dr.date_day)': {'_node': '(identifier)', 'dataset': None, 'table': 'dr', 'column': 'date_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:68:16-68:27': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'68:16-68:27': {'start_line': 68, 'start_char': 16, 'end_line': 68, 'end_char': 27}}}}}}, {'code.Column(?.dr.date_day)': {'_node': '(identifier)', 'dataset': None, 'table': 'dr', 'column': 'date_day', 'location': {'./tests/inputs/codebase/0-accounts.sql:69:16-69:27': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'69:16-69:27': {'start_line': 69, 'start_char': 16, 'end_line': 69, 'end_char': 27}}}}}}, {'code.Column(?.ds.contract_end_date)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'contract_end_date', 'location': {'./tests/inputs/codebase/0-accounts.sql:69:36-69:56': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'69:36-69:56': {'start_line': 69, 'start_char': 36, 'end_line': 69, 'end_char': 56}}}}}}, {'code.Column(?.ds.contract_start_date)': {'_node': '(identifier)', 'dataset': None, 'table': 'ds', 'column': 'contract_start_date', 'location': {'./tests/inputs/codebase/0-accounts.sql:68:36-68:58': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'68:36-68:58': {'start_line': 68, 'start_char': 36, 'end_line': 68, 'end_char': 58}}}}}}], 'alias': None, 'location': {'./tests/inputs/codebase/0-accounts.sql:68:16-69:57': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'68:16-69:57': {'start_line': 68, 'start_char': 16, 'end_line': 69, 'end_char': 57}}}}, 'sql': 'dr.date_day >= date(ds.contract_start_date)\\n            AND dr.date_day <= date(ds.contract_end_date)'}}": {
        "Expression(reliability=1, Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:68:16-69:57)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:68:16-69:57": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "68:16-69:57": {
                    "start_line": 68,
                    "start_char": 16,
                    "end_line": 69,
                    "end_char": 57 } } } } ],
          "columns": [
            { "Column(?.date_ranges.date_day)": {
                "_code": "[code.Column(?.dr.date_day), code.Column(?.dr.date_day)]",
                "dataset": null,
                "table": "date_ranges",
                "column": "date_day" } },
            { "Column(?.deals_signed.contract_end_date)": {
                "_code": "[code.Column(?.ds.contract_end_date)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "contract_end_date" } },
            { "Column(?.deals_signed.contract_start_date)": {
                "_code": "[code.Column(?.ds.contract_start_date)]",
                "dataset": null,
                "table": "deals_signed",
                "column": "contract_start_date" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(>=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_start_date))), <=(Column(?.date_ranges.date_day), Date(Column(?.deals_signed.contract_end_date)))))",
          "sql": "dr.date_day >= date(ds.contract_start_date)\n            AND dr.date_day <= date(ds.contract_end_date)" } },
      "{\"code.Expression(./tests/inputs/codebase/0-accounts.sql:80:4-85:7) = code.Expression(CASE \\n        WHEN t.revenue_12m <= 300 THEN 'Small'\\n        WHEN t.revenue_12m > 300 AND t.revenue_12m <= 600 THEN 'Medium'\\n        WHEN t.revenue_12m > 600 THEN 'Large'\\n        ELSE NULL\\n    END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (number)) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (binary_expression left: (identifier) right: (number)) right: (binary_expression left: (identifier) right: (number))) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (identifier) right: (number)) match_result: (string)) (caseelse_clause else_result: (NULL)))', 'columns': [{'code.Column(?.t.revenue_12m)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_12m', 'location': {'./tests/inputs/codebase/0-accounts.sql:81:13-81:26': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'81:13-81:26': {'start_line': 81, 'start_char': 13, 'end_line': 81, 'end_char': 26}}}}}}, {'code.Column(?.t.revenue_12m)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_12m', 'location': {'./tests/inputs/codebase/0-accounts.sql:82:13-82:26': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'82:13-82:26': {'start_line': 82, 'start_char': 13, 'end_line': 82, 'end_char': 26}}}}}}, {'code.Column(?.t.revenue_12m)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_12m', 'location': {'./tests/inputs/codebase/0-accounts.sql:82:37-82:50': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'82:37-82:50': {'start_line': 82, 'start_char': 37, 'end_line': 82, 'end_char': 50}}}}}}, {'code.Column(?.t.revenue_12m)': {'_node': '(identifier)', 'dataset': None, 'table': 't', 'column': 'revenue_12m', 'location': {'./tests/inputs/codebase/0-accounts.sql:83:13-83:26': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'83:13-83:26': {'start_line': 83, 'start_char': 13, 'end_line': 83, 'end_char': 26}}}}}}], 'alias': 'account_size', 'location': {'./tests/inputs/codebase/0-accounts.sql:80:4-85:7': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'80:4-85:7': {'start_line': 80, 'start_char': 4, 'end_line': 85, 'end_char': 7}}}}, 'sql': \"CASE \\n        WHEN t.revenue_12m <= 300 THEN 'Small'\\n        WHEN t.revenue_12m > 300 AND t.revenue_12m <= 600 THEN 'Medium'\\n        WHEN t.revenue_12m > 600 THEN 'Large'\\n        ELSE NULL\\n    END\"}}": {
        "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:80:4-85:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:80:4-85:7": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "80:4-85:7": {
                    "start_line": 80,
                    "start_char": 4,
                    "end_line": 85,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.t.revenue_12m)": {
                "_code": "[code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m), code.Column(?.t.revenue_12m)]",
                "dataset": null,
                "table": "t",
                "column": "revenue_12m" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(<=(Column(?.t.revenue_12m), 300), 'Small'), Casewhen_clause(And(>(Column(?.t.revenue_12m), 300), <=(Column(?.t.revenue_12m), 600)), 'Medium'), Casewhen_clause(>(Column(?.t.revenue_12m), 600), 'Large'), Caseelse_clause(Null())))",
          "sql": "CASE \n        WHEN t.revenue_12m <= 300 THEN 'Small'\n        WHEN t.revenue_12m > 300 AND t.revenue_12m <= 600 THEN 'Medium'\n        WHEN t.revenue_12m > 600 THEN 'Large'\n        ELSE NULL\n    END" } },
      "{\"code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11) = code.Expression(CASE\\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n            ELSE NULL\\n        END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (caseelse_clause else_result: (NULL)))', 'columns': [{'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/0-accounts.sql:98:17-98:25': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'98:17-98:25': {'start_line': 98, 'start_char': 17, 'end_line': 98, 'end_char': 25}}}}}}, {'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/0-accounts.sql:99:17-99:25': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'99:17-99:25': {'start_line': 99, 'start_char': 17, 'end_line': 99, 'end_char': 25}}}}}}], 'alias': 'region_cluster', 'location': {'./tests/inputs/codebase/0-accounts.sql:97:8-101:11': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'97:8-101:11': {'start_line': 97, 'start_char': 8, 'end_line': 101, 'end_char': 11}}}}, 'sql': \"CASE\\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n            ELSE NULL\\n        END\"}}": {
        "Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11), code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7), code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:97:8-101:11": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "97:8-101:11": {
                    "start_line": 97,
                    "start_char": 8,
                    "end_line": 101,
                    "end_char": 11 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:32:4-36:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "32:4-36:7": {
                    "start_line": 32,
                    "start_char": 4,
                    "end_line": 36,
                    "end_char": 7 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:6:4-10:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "6:4-10:7": {
                    "start_line": 6,
                    "start_char": 4,
                    "end_line": 10,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.countries.region)": {
                "_code": "[code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region)]",
                "dataset": null,
                "table": "countries",
                "column": "region" } } ],
          "reliability": 3,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))",
          "sql": "CASE\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n            ELSE NULL\n        END" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7) = code.Expression(CASE\\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n        ELSE NULL\\n    END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (caseelse_clause else_result: (NULL)))', 'columns': [{'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/1-revenue.sql:7:13-7:21': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'7:13-7:21': {'start_line': 7, 'start_char': 13, 'end_line': 7, 'end_char': 21}}}}}}, {'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/1-revenue.sql:8:13-8:21': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'8:13-8:21': {'start_line': 8, 'start_char': 13, 'end_line': 8, 'end_char': 21}}}}}}], 'alias': 'region_cluster', 'location': {'./tests/inputs/codebase/1-revenue.sql:6:4-10:7': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'6:4-10:7': {'start_line': 6, 'start_char': 4, 'end_line': 10, 'end_char': 7}}}}, 'sql': \"CASE\\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n        ELSE NULL\\n    END\"}}": {
        "Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11), code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7), code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:97:8-101:11": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "97:8-101:11": {
                    "start_line": 97,
                    "start_char": 8,
                    "end_line": 101,
                    "end_char": 11 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:32:4-36:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "32:4-36:7": {
                    "start_line": 32,
                    "start_char": 4,
                    "end_line": 36,
                    "end_char": 7 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:6:4-10:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "6:4-10:7": {
                    "start_line": 6,
                    "start_char": 4,
                    "end_line": 10,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.countries.region)": {
                "_code": "[code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region)]",
                "dataset": null,
                "table": "countries",
                "column": "region" } } ],
          "reliability": 3,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))",
          "sql": "CASE\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n            ELSE NULL\n        END" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7) = code.Expression(CASE\\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n        ELSE NULL\\n    END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (identifier) right: (struct (string) (string))) match_result: (string)) (caseelse_clause else_result: (NULL)))', 'columns': [{'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/1-revenue.sql:33:13-33:21': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'33:13-33:21': {'start_line': 33, 'start_char': 13, 'end_line': 33, 'end_char': 21}}}}}}, {'code.Column(?.c.region)': {'_node': '(identifier)', 'dataset': None, 'table': 'c', 'column': 'region', 'location': {'./tests/inputs/codebase/1-revenue.sql:34:13-34:21': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'34:13-34:21': {'start_line': 34, 'start_char': 13, 'end_line': 34, 'end_char': 21}}}}}}], 'alias': 'cluster', 'location': {'./tests/inputs/codebase/1-revenue.sql:32:4-36:7': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'32:4-36:7': {'start_line': 32, 'start_char': 4, 'end_line': 36, 'end_char': 7}}}}, 'sql': \"CASE\\n        WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\\n        WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\\n        ELSE NULL\\n    END\"}}": {
        "Expression(reliability=3, Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:97:8-101:11), code.Expression(./tests/inputs/codebase/1-revenue.sql:6:4-10:7), code.Expression(./tests/inputs/codebase/1-revenue.sql:32:4-36:7)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:97:8-101:11": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "97:8-101:11": {
                    "start_line": 97,
                    "start_char": 8,
                    "end_line": 101,
                    "end_char": 11 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:32:4-36:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "32:4-36:7": {
                    "start_line": 32,
                    "start_char": 4,
                    "end_line": 36,
                    "end_char": 7 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:6:4-10:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "6:4-10:7": {
                    "start_line": 6,
                    "start_char": 4,
                    "end_line": 10,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.countries.region)": {
                "_code": "[code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region), code.Column(?.c.region)]",
                "dataset": null,
                "table": "countries",
                "column": "region" } } ],
          "reliability": 3,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(In(Column(?.countries.region), Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(Column(?.countries.region), Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())))",
          "sql": "CASE\n            WHEN c.region IN ('Americas', 'Europe') THEN 'North-West'\n            WHEN c.region IN ('Africa', 'Asia') THEN 'South-East'\n            ELSE NULL\n        END" } },
      "{'code.Expression(./tests/inputs/codebase/0-accounts.sql:103:8-107:9) = code.Expression(SUM(revenue) OVER (\\n            PARTITION BY account_id \\n            ORDER BY date_month \\n            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW\\n        ))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)) (analytics_clause (over_clause (window_specification (window_partition_clause (partition_expression (identifier))) (order_by_clause (order_by_clause_body (identifier))) (window_frame_clause (rows_range) (window_frame_between (between_from (number)) (between_to (keyword_current_row))))))))', 'columns': [{'code.Column(?.?.account_id)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'account_id', 'location': {'./tests/inputs/codebase/0-accounts.sql:104:25-104:35': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'104:25-104:35': {'start_line': 104, 'start_char': 25, 'end_line': 104, 'end_char': 35}}}}}}, {'code.Column(?.?.date_month)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'date_month', 'location': {'./tests/inputs/codebase/0-accounts.sql:105:21-105:31': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'105:21-105:31': {'start_line': 105, 'start_char': 21, 'end_line': 105, 'end_char': 31}}}}}}, {'code.Column(?.?.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'revenue', 'location': {'./tests/inputs/codebase/0-accounts.sql:103:12-103:19': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'103:12-103:19': {'start_line': 103, 'start_char': 12, 'end_line': 103, 'end_char': 19}}}}}}], 'alias': 'revenue_12m', 'location': {'./tests/inputs/codebase/0-accounts.sql:103:8-107:9': {'file': './tests/inputs/codebase/0-accounts.sql', 'range': {'103:8-107:9': {'start_line': 103, 'start_char': 8, 'end_line': 107, 'end_char': 9}}}}, 'sql': 'SUM(revenue) OVER (\\n            PARTITION BY account_id \\n            ORDER BY date_month \\n            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW\\n        )'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/0-accounts.sql:103:8-107:9)]",
          "locations": [
            { "./tests/inputs/codebase/0-accounts.sql:103:8-107:9": {
                "file": "./tests/inputs/codebase/0-accounts.sql",
                "range": {
                  "103:8-107:9": {
                    "start_line": 103,
                    "start_char": 8,
                    "end_line": 107,
                    "end_char": 9 } } } } ],
          "columns": [
            { "Column(?.?.account_id)": {
                "_code": "[code.Column(?.?.account_id)]",
                "dataset": null,
                "table": null,
                "column": "account_id" } },
            { "Column(?.?.date_month)": {
                "_code": "[code.Column(?.?.date_month), code.Column(?.?.date_month)]",
                "dataset": null,
                "table": null,
                "column": "date_month" } },
            { "Column(?.?.revenue)": {
                "_code": "[code.Column(?.?.revenue), code.Column(?.?.revenue)]",
                "dataset": null,
                "table": null,
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.?.revenue)), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(Column(?.?.account_id))), Order_by_clause(Order_by_clause_body(Column(?.?.date_month))), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row()))))))))",
          "sql": "SUM(revenue) OVER (\n            PARTITION BY account_id \n            ORDER BY date_month \n            ROWS BETWEEN 11 PRECEDING AND CURRENT ROW\n        )" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:5:4-5:37) = code.Expression(date(date_month, 'start of year'))\": {'_node': '(function_call function: (identifier) argument: (argument (identifier)) argument: (argument (string)))', 'columns': [{'code.Column(?.?.date_month)': {'_node': '(identifier)', 'dataset': None, 'table': None, 'column': 'date_month', 'location': {'./tests/inputs/codebase/1-revenue.sql:5:9-5:19': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'5:9-5:19': {'start_line': 5, 'start_char': 9, 'end_line': 5, 'end_char': 19}}}}}}], 'alias': 'date_year', 'location': {'./tests/inputs/codebase/1-revenue.sql:5:4-5:37': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'5:4-5:37': {'start_line': 5, 'start_char': 4, 'end_line': 5, 'end_char': 37}}}}, 'sql': \"date(date_month, 'start of year')\"}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:5:4-5:37)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:5:4-5:37": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "5:4-5:37": {
                    "start_line": 5,
                    "start_char": 4,
                    "end_line": 5,
                    "end_char": 37 } } } } ],
          "columns": [
            { "Column(?.?.date_month)": {
                "_code": "[code.Column(?.?.date_month), code.Column(?.?.date_month)]",
                "dataset": null,
                "table": null,
                "column": "date_month" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier(), Argument(Column(?.?.date_month)), Argument('start of year')))",
          "sql": "date(date_month, 'start of year')" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:11:4-15:7) = code.Expression(CASE \\n        WHEN a.industry = 'Information Technology' THEN 'Tech'\\n        WHEN a.industry IS NULL THEN NULL\\n        ELSE 'Other'\\n    END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (identifier) right: (string)) match_result: (string)) (casewhen_clause match_condition: (unary_expression (identifier) (NULL)) match_result: (NULL)) (caseelse_clause else_result: (string)))', 'columns': [{'code.Column(?.a.industry)': {'_node': '(identifier)', 'dataset': None, 'table': 'a', 'column': 'industry', 'location': {'./tests/inputs/codebase/1-revenue.sql:12:13-12:23': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'12:13-12:23': {'start_line': 12, 'start_char': 13, 'end_line': 12, 'end_char': 23}}}}}}, {'code.Column(?.a.industry)': {'_node': '(identifier)', 'dataset': None, 'table': 'a', 'column': 'industry', 'location': {'./tests/inputs/codebase/1-revenue.sql:13:13-13:23': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'13:13-13:23': {'start_line': 13, 'start_char': 13, 'end_line': 13, 'end_char': 23}}}}}}], 'alias': 'industry_cluster', 'location': {'./tests/inputs/codebase/1-revenue.sql:11:4-15:7': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'11:4-15:7': {'start_line': 11, 'start_char': 4, 'end_line': 15, 'end_char': 7}}}}, 'sql': \"CASE \\n        WHEN a.industry = 'Information Technology' THEN 'Tech'\\n        WHEN a.industry IS NULL THEN NULL\\n        ELSE 'Other'\\n    END\"}}": {
        "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:11:4-15:7)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:11:4-15:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "11:4-15:7": {
                    "start_line": 11,
                    "start_char": 4,
                    "end_line": 15,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.accounts.industry)": {
                "_code": "[code.Column(?.a.industry), code.Column(?.a.industry), code.Column(?.accounts.industry)]",
                "dataset": null,
                "table": "accounts",
                "column": "industry" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(=(Column(?.accounts.industry), 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(Column(?.accounts.industry), Null()), Null()), Caseelse_clause('Other')))",
          "sql": "CASE \n        WHEN a.industry = 'Information Technology' THEN 'Tech'\n        WHEN a.industry IS NULL THEN NULL\n        ELSE 'Other'\n    END" } },
      "{'code.Expression(./tests/inputs/codebase/1-revenue.sql:17:4-17:19) = code.Expression(SUM(ar.revenue))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ar.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'ar', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:17:8-17:18': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'17:8-17:18': {'start_line': 17, 'start_char': 8, 'end_line': 17, 'end_char': 18}}}}}}], 'alias': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:17:4-17:19': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'17:4-17:19': {'start_line': 17, 'start_char': 4, 'end_line': 17, 'end_char': 19}}}}, 'sql': 'SUM(ar.revenue)'}}": {
        "Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:17:4-17:19), code.Expression(./tests/inputs/codebase/1-revenue.sql:45:4-45:33)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:17:4-17:19": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "17:4-17:19": {
                    "start_line": 17,
                    "start_char": 4,
                    "end_line": 17,
                    "end_char": 19 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:45:4-45:33": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "45:4-45:33": {
                    "start_line": 45,
                    "start_char": 4,
                    "end_line": 45,
                    "end_char": 33 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 2,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))",
          "sql": "SUM(ar.revenue)" } },
      "{'code.Expression(./tests/inputs/codebase/1-revenue.sql:45:4-45:33) = code.Expression(SUM(accounts_revenue.revenue))': {'_node': '(function_call function: (identifier) argument: (argument (identifier)))', 'columns': [{'code.Column(?.accounts_revenue.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts_revenue', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:45:8-45:32': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'45:8-45:32': {'start_line': 45, 'start_char': 8, 'end_line': 45, 'end_char': 32}}}}}}], 'alias': 'revenue_12m', 'location': {'./tests/inputs/codebase/1-revenue.sql:45:4-45:33': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'45:4-45:33': {'start_line': 45, 'start_char': 4, 'end_line': 45, 'end_char': 33}}}}, 'sql': 'SUM(accounts_revenue.revenue)'}}": {
        "Expression(reliability=2, Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:17:4-17:19), code.Expression(./tests/inputs/codebase/1-revenue.sql:45:4-45:33)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:17:4-17:19": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "17:4-17:19": {
                    "start_line": 17,
                    "start_char": 4,
                    "end_line": 17,
                    "end_char": 19 } } } },
            { "./tests/inputs/codebase/1-revenue.sql:45:4-45:33": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "45:4-45:33": {
                    "start_line": 45,
                    "start_char": 4,
                    "end_line": 45,
                    "end_char": 33 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 2,
          "canonical": "Expression(Function_call(Identifier, Argument(Column(?.accounts_revenue.revenue))))",
          "sql": "SUM(ar.revenue)" } },
      "{'code.Expression(./tests/inputs/codebase/1-revenue.sql:18:4-18:33) = code.Expression(COUNT(DISTINCT ar.account_id))': {'_node': '(function_call function: (identifier) (distinct) argument: (argument (identifier)))', 'columns': [{'code.Column(?.ar.account_id)': {'_node': '(identifier)', 'dataset': None, 'table': 'ar', 'column': 'account_id', 'location': {'./tests/inputs/codebase/1-revenue.sql:18:19-18:32': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'18:19-18:32': {'start_line': 18, 'start_char': 19, 'end_line': 18, 'end_char': 32}}}}}}], 'alias': 'accounts', 'location': {'./tests/inputs/codebase/1-revenue.sql:18:4-18:33': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'18:4-18:33': {'start_line': 18, 'start_char': 4, 'end_line': 18, 'end_char': 33}}}}, 'sql': 'COUNT(DISTINCT ar.account_id)'}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:18:4-18:33)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:18:4-18:33": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "18:4-18:33": {
                    "start_line": 18,
                    "start_char": 4,
                    "end_line": 18,
                    "end_char": 33 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.account_id)": {
                "_code": "[code.Column(?.ar.account_id), code.Column(?.ar.account_id)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "account_id" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Distinct(), Argument(Column(?.accounts_revenue.account_id))))",
          "sql": "COUNT(DISTINCT ar.account_id)" } },
      "{'code.Expression(./tests/inputs/codebase/1-revenue.sql:19:4-19:51) = code.Expression(SUM(ar.revenue) / COUNT(DISTINCT ar.account_id))': {'_node': '(binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (function_call function: (identifier) (distinct) argument: (argument (identifier))))', 'columns': [{'code.Column(?.ar.account_id)': {'_node': '(identifier)', 'dataset': None, 'table': 'ar', 'column': 'account_id', 'location': {'./tests/inputs/codebase/1-revenue.sql:19:37-19:50': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'19:37-19:50': {'start_line': 19, 'start_char': 37, 'end_line': 19, 'end_char': 50}}}}}}, {'code.Column(?.ar.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'ar', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:19:8-19:18': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'19:8-19:18': {'start_line': 19, 'start_char': 8, 'end_line': 19, 'end_char': 18}}}}}}], 'alias': 'revenue_per_account', 'location': {'./tests/inputs/codebase/1-revenue.sql:19:4-19:51': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'19:4-19:51': {'start_line': 19, 'start_char': 4, 'end_line': 19, 'end_char': 51}}}}, 'sql': 'SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)'}}": {
        "Expression(reliability=1, Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id)))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:19:4-19:51)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:19:4-19:51": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "19:4-19:51": {
                    "start_line": 19,
                    "start_char": 4,
                    "end_line": 19,
                    "end_char": 51 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.account_id)": {
                "_code": "[code.Column(?.ar.account_id), code.Column(?.ar.account_id)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "account_id" } },
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Binary_expression(Sum(Column(?.accounts_revenue.revenue)), Count(Column(?.accounts_revenue.account_id))))",
          "sql": "SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:38:4-38:70) = code.Expression(IIF(accounts.industry = 'Information Technology', 'Tech', 'Other'))\": {'_node': '(function_call function: (identifier) argument: (argument (binary_expression left: (identifier) right: (string))) argument: (argument (string)) argument: (argument (string)))', 'columns': [{'code.Column(?.accounts.industry)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts', 'column': 'industry', 'location': {'./tests/inputs/codebase/1-revenue.sql:38:8-38:25': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'38:8-38:25': {'start_line': 38, 'start_char': 8, 'end_line': 38, 'end_char': 25}}}}}}], 'alias': 'industry_tech', 'location': {'./tests/inputs/codebase/1-revenue.sql:38:4-38:70': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'38:4-38:70': {'start_line': 38, 'start_char': 4, 'end_line': 38, 'end_char': 70}}}}, 'sql': \"IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')\"}}": {
        "Expression(reliability=1, Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other'))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:38:4-38:70)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:38:4-38:70": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "38:4-38:70": {
                    "start_line": 38,
                    "start_char": 4,
                    "end_line": 38,
                    "end_char": 70 } } } } ],
          "columns": [
            { "Column(?.accounts.industry)": {
                "_code": "[code.Column(?.a.industry), code.Column(?.a.industry), code.Column(?.accounts.industry)]",
                "dataset": null,
                "table": "accounts",
                "column": "industry" } } ],
          "reliability": 1,
          "canonical": "Expression(Function_call(Identifier, Argument(=(Column(?.accounts.industry), 'Information Technology')), Argument('Tech'), Argument('Other')))",
          "sql": "IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')" } },
      "{\"code.Expression(./tests/inputs/codebase/1-revenue.sql:39:4-44:7) = code.Expression(CASE \\n        WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small'\\n        WHEN SUM(accounts_revenue.revenue) > 300 AND SUM(accounts_revenue.revenue) <= 600 THEN 'Medium'\\n        WHEN SUM(accounts_revenue.revenue) > 600 THEN 'Large'\\n        ELSE NULL\\n    END)\": {'_node': '(casewhen_expression (casewhen_clause match_condition: (binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (number)) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (number)) right: (binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (number))) match_result: (string)) (casewhen_clause match_condition: (binary_expression left: (function_call function: (identifier) argument: (argument (identifier))) right: (number)) match_result: (string)) (caseelse_clause else_result: (NULL)))', 'columns': [{'code.Column(?.accounts_revenue.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts_revenue', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:40:17-40:41': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'40:17-40:41': {'start_line': 40, 'start_char': 17, 'end_line': 40, 'end_char': 41}}}}}}, {'code.Column(?.accounts_revenue.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts_revenue', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:41:17-41:41': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'41:17-41:41': {'start_line': 41, 'start_char': 17, 'end_line': 41, 'end_char': 41}}}}}}, {'code.Column(?.accounts_revenue.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts_revenue', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:41:57-41:81': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'41:57-41:81': {'start_line': 41, 'start_char': 57, 'end_line': 41, 'end_char': 81}}}}}}, {'code.Column(?.accounts_revenue.revenue)': {'_node': '(identifier)', 'dataset': None, 'table': 'accounts_revenue', 'column': 'revenue', 'location': {'./tests/inputs/codebase/1-revenue.sql:42:17-42:41': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'42:17-42:41': {'start_line': 42, 'start_char': 17, 'end_line': 42, 'end_char': 41}}}}}}], 'alias': 'account_size', 'location': {'./tests/inputs/codebase/1-revenue.sql:39:4-44:7': {'file': './tests/inputs/codebase/1-revenue.sql', 'range': {'39:4-44:7': {'start_line': 39, 'start_char': 4, 'end_line': 44, 'end_char': 7}}}}, 'sql': \"CASE \\n        WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small'\\n        WHEN SUM(accounts_revenue.revenue) > 300 AND SUM(accounts_revenue.revenue) <= 600 THEN 'Medium'\\n        WHEN SUM(accounts_revenue.revenue) > 600 THEN 'Large'\\n        ELSE NULL\\n    END\"}}": {
        "Expression(reliability=1, Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null()))))": {
          "_code": "[code.Expression(./tests/inputs/codebase/1-revenue.sql:39:4-44:7)]",
          "locations": [
            { "./tests/inputs/codebase/1-revenue.sql:39:4-44:7": {
                "file": "./tests/inputs/codebase/1-revenue.sql",
                "range": {
                  "39:4-44:7": {
                    "start_line": 39,
                    "start_char": 4,
                    "end_line": 44,
                    "end_char": 7 } } } } ],
          "columns": [
            { "Column(?.accounts_revenue.revenue)": {
                "_code": "[code.Column(?.ar.revenue), code.Column(?.ar.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue), code.Column(?.accounts_revenue.revenue)]",
                "dataset": null,
                "table": "accounts_revenue",
                "column": "revenue" } } ],
          "reliability": 1,
          "canonical": "Expression(Casewhen_expression(Casewhen_clause(<=(Sum(Column(?.accounts_revenue.revenue)), 300), 'Small'), Casewhen_clause(And(>(Sum(Column(?.accounts_revenue.revenue)), 300), <=(Sum(Column(?.accounts_revenue.revenue)), 600)), 'Medium'), Casewhen_clause(>(Sum(Column(?.accounts_revenue.revenue)), 600), 'Large'), Caseelse_clause(Null())))",
          "sql": "CASE \n        WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small'\n        WHEN SUM(accounts_revenue.revenue) > 300 AND SUM(accounts_revenue.revenue) <= 600 THEN 'Medium'\n        WHEN SUM(accounts_revenue.revenue) > 600 THEN 'Large'\n        ELSE NULL\n    END" } } } } }