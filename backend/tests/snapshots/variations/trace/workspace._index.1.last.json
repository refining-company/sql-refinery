{
  "<class 'src.code.Column'>": [
    "code.Column(0-accounts.sql:103:12-103:19) = ?.?.revenue",
    "code.Column(0-accounts.sql:104:25-104:35) = ?.?.account_id",
    "code.Column(0-accounts.sql:105:21-105:31) = ?.?.date_month",
    "code.Column(0-accounts.sql:27:14-27:36) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:27:4-27:11) = ?.?.revenue",
    "code.Column(0-accounts.sql:28:19-28:41) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:28:4-28:16) = ?.?.revenue_core",
    "code.Column(0-accounts.sql:29:18-29:40) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:29:4-29:15) = ?.?.revenue_aux",
    "code.Column(0-accounts.sql:36:18-36:37) = ?.d.contract_end_date",
    "code.Column(0-accounts.sql:36:51-36:72) = ?.d.contract_start_date",
    "code.Column(0-accounts.sql:37:22-37:31) = ?.o.product",
    "code.Column(0-accounts.sql:37:86-37:93) = ?.o.value",
    "code.Column(0-accounts.sql:38:22-38:31) = ?.o.product",
    "code.Column(0-accounts.sql:38:67-38:74) = ?.o.value",
    "code.Column(0-accounts.sql:39:12-39:19) = ?.o.value",
    "code.Column(0-accounts.sql:53:8-53:15) = ?.t.deals",
    "code.Column(0-accounts.sql:54:8-54:22) = ?.t.revenue_core",
    "code.Column(0-accounts.sql:55:8-55:21) = ?.t.revenue_aux",
    "code.Column(0-accounts.sql:56:8-56:17) = ?.t.revenue",
    "code.Column(0-accounts.sql:60:13-60:21) = ?.?.date_day",
    "code.Column(0-accounts.sql:62:14-62:24) = ?.ds.deal_id",
    "code.Column(0-accounts.sql:63:12-63:31) = ?.ds.revenue_core_day",
    "code.Column(0-accounts.sql:64:12-64:30) = ?.ds.revenue_aux_day",
    "code.Column(0-accounts.sql:65:12-65:26) = ?.ds.revenue_day",
    "code.Column(0-accounts.sql:68:16-68:27) = ?.dr.date_day",
    "code.Column(0-accounts.sql:68:36-68:58) = ?.ds.contract_start_date",
    "code.Column(0-accounts.sql:69:16-69:27) = ?.dr.date_day",
    "code.Column(0-accounts.sql:69:36-69:56) = ?.ds.contract_end_date",
    "code.Column(0-accounts.sql:81:13-81:26) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:82:13-82:26) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:82:37-82:50) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:83:13-83:26) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:98:17-98:25) = ?.c.region",
    "code.Column(0-accounts.sql:99:17-99:25) = ?.c.region",
    "code.Column(1-revenue.sql:12:13-12:23) = ?.a.industry",
    "code.Column(1-revenue.sql:13:13-13:23) = ?.a.industry",
    "code.Column(1-revenue.sql:17:8-17:18) = ?.ar.revenue",
    "code.Column(1-revenue.sql:18:19-18:32) = ?.ar.account_id",
    "code.Column(1-revenue.sql:19:37-19:50) = ?.ar.account_id",
    "code.Column(1-revenue.sql:19:8-19:18) = ?.ar.revenue",
    "code.Column(1-revenue.sql:33:13-33:21) = ?.c.region",
    "code.Column(1-revenue.sql:34:13-34:21) = ?.c.region",
    "code.Column(1-revenue.sql:38:8-38:25) = ?.accounts.industry",
    "code.Column(1-revenue.sql:40:17-40:41) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:41:17-41:41) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:41:57-41:81) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:42:17-42:41) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:45:8-45:32) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:5:9-5:19) = ?.?.date_month",
    "code.Column(1-revenue.sql:7:13-7:21) = ?.c.region",
    "code.Column(1-revenue.sql:8:13-8:21) = ?.c.region",
    "code.Column(editor.sql:12:8-12:18) = ?.a.industry",
    "code.Column(editor.sql:13:8-13:18) = ?.ar.revenue",
    "code.Column(editor.sql:14:19-14:32) = ?.ar.account_id",
    "code.Column(editor.sql:15:37-15:50) = ?.ar.account_id",
    "code.Column(editor.sql:15:8-15:18) = ?.ar.revenue",
    "code.Column(editor.sql:3:9-3:19) = ?.?.date_month",
    "code.Column(editor.sql:6:13-6:21) = ?.c.region",
    "code.Column(editor.sql:7:13-7:21) = ?.c.region",
    "code.Column(editor.sql:8:13-8:21) = ?.c.region" ],
  "<class 'src.code.Expression'>": [
    "code.Expression(0-accounts.sql:103:8-107:9) = SUM(revenue) OVER ( PARTITION BY account_id ORDER BY date_month ROWS BETWEEN ...",
    "code.Expression(0-accounts.sql:27:4-27:36) = revenue / contract_duration_days",
    "code.Expression(0-accounts.sql:28:4-28:41) = revenue_core / contract_duration_days",
    "code.Expression(0-accounts.sql:29:4-29:40) = revenue_aux / contract_duration_days",
    "code.Expression(0-accounts.sql:36:8-36:77) = julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1",
    "code.Expression(0-accounts.sql:37:8-37:105) = SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN...",
    "code.Expression(0-accounts.sql:38:8-38:86) = SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)",
    "code.Expression(0-accounts.sql:39:8-39:20) = SUM(o.value)",
    "code.Expression(0-accounts.sql:53:4-53:16) = AVG(t.deals)",
    "code.Expression(0-accounts.sql:54:4-54:23) = SUM(t.revenue_core)",
    "code.Expression(0-accounts.sql:55:4-55:22) = SUM(t.revenue_aux)",
    "code.Expression(0-accounts.sql:56:4-56:18) = SUM(t.revenue)",
    "code.Expression(0-accounts.sql:60:8-60:40) = DATE(date_day, 'start of month')",
    "code.Expression(0-accounts.sql:62:8-62:25) = COUNT(ds.deal_id)",
    "code.Expression(0-accounts.sql:63:8-63:32) = SUM(ds.revenue_core_day)",
    "code.Expression(0-accounts.sql:64:8-64:31) = SUM(ds.revenue_aux_day)",
    "code.Expression(0-accounts.sql:65:8-65:27) = SUM(ds.revenue_day)",
    "code.Expression(0-accounts.sql:68:16-69:57) = dr.date_day >= date(ds.contract_start_date) AND dr.date_day <= date(ds.contra...",
    "code.Expression(0-accounts.sql:80:4-85:7) = CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > 300 AND t.re...",
    "code.Expression(0-accounts.sql:97:8-101:11) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "code.Expression(1-revenue.sql:11:4-15:7) = CASE WHEN a.industry = 'Information Technology' THEN 'Tech' WHEN a.industry I...",
    "code.Expression(1-revenue.sql:17:4-17:19) = SUM(ar.revenue)",
    "code.Expression(1-revenue.sql:18:4-18:33) = COUNT(DISTINCT ar.account_id)",
    "code.Expression(1-revenue.sql:19:4-19:51) = SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)",
    "code.Expression(1-revenue.sql:32:4-36:7) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "code.Expression(1-revenue.sql:38:4-38:70) = IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')",
    "code.Expression(1-revenue.sql:39:4-44:7) = CASE WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small' WHEN SUM(accounts...",
    "code.Expression(1-revenue.sql:45:4-45:33) = SUM(accounts_revenue.revenue)",
    "code.Expression(1-revenue.sql:5:4-5:37) = date(date_month, 'start of year')",
    "code.Expression(1-revenue.sql:6:4-10:7) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "code.Expression(editor.sql:12:4-12:62) = IIF(a.industry = 'Information Technology', 'IT', 'Non-IT')",
    "code.Expression(editor.sql:13:4-13:19) = SUM(ar.revenue)",
    "code.Expression(editor.sql:14:4-14:33) = COUNT(DISTINCT ar.account_id)",
    "code.Expression(editor.sql:15:4-15:51) = SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)",
    "code.Expression(editor.sql:3:4-3:37) = date(date_month, 'start of year')",
    "code.Expression(editor.sql:5:4-10:7) = CASE WHEN c.region IN ('Americas') THEN 'AMER' WHEN c.region IN ('Europe', 'A..." ],
  "<class 'src.code.Query'>": [
    "code.Query(0-accounts.sql:25:0-44:6) = SELECT *, revenue / contract_duration_days AS revenue_day, revenue_core / con...",
    "code.Query(0-accounts.sql:31:4-43:80) = SELECT d.deal_id, d.account_id, d.contract_start_date, d.contract_end_date, j...",
    "code.Query(0-accounts.sql:50:0-71:31) = SELECT t.date_month, t.account_id, AVG(t.deals) AS deals, SUM(t.revenue_core)...",
    "code.Query(0-accounts.sql:58:4-70:39) = SELECT dr.date_day, DATE(date_day, 'start of month') AS date_month, ds.accoun...",
    "code.Query(0-accounts.sql:78:0-111:6) = SELECT t.*, CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > ...",
    "code.Query(0-accounts.sql:87:4-110:45) = SELECT account_id, date_month, revenue, revenue_core, revenue_aux, deals, acc...",
    "code.Query(1-revenue.sql:29:0-50:49) = SELECT accounts.name, region, CASE WHEN c.region IN ('Americas', 'Europe') TH...",
    "code.Query(1-revenue.sql:4:0-25:52) = SELECT date(date_month, 'start of year') AS date_year, CASE WHEN c.region IN ...",
    "code.Query(editor.sql:2:0-24:45) = SELECT date(date_month, 'start of year') AS date_year, -- This should cause a..." ],
  "<class 'src.code.Table'>": [
    "code.Table(0-accounts.sql:108:9-108:25) = ?.accounts_revenue",
    "code.Table(0-accounts.sql:109:13-109:21) = ?.accounts",
    "code.Table(0-accounts.sql:110:18-110:27) = ?.countries",
    "code.Table(0-accounts.sql:40:9-40:15) = ?.orders",
    "code.Table(0-accounts.sql:41:13-41:18) = ?.deals",
    "code.Table(0-accounts.sql:66:9-66:20) = ?.date_ranges",
    "code.Table(0-accounts.sql:67:18-67:30) = ?.deals_signed",
    "code.Table(1-revenue.sql:20:5-20:21) = ?.accounts_revenue",
    "code.Table(1-revenue.sql:21:14-21:22) = ?.accounts",
    "code.Table(1-revenue.sql:22:14-22:23) = ?.countries",
    "code.Table(1-revenue.sql:23:14-23:26) = ?.accounts_360",
    "code.Table(1-revenue.sql:46:5-46:13) = ?.accounts",
    "code.Table(1-revenue.sql:47:14-47:30) = ?.accounts_revenue",
    "code.Table(1-revenue.sql:48:14-48:23) = ?.countries",
    "code.Table(editor.sql:16:5-16:21) = ?.accounts_revenue",
    "code.Table(editor.sql:17:14-17:22) = ?.accounts",
    "code.Table(editor.sql:18:14-18:23) = ?.countries" ],
  "<class 'src.model.Column'>": [
    "model.Column(frequency=1) = ?.?.account_id",
    "model.Column(frequency=1) = ?.?.date_day",
    "model.Column(frequency=1) = ?.?.revenue_aux",
    "model.Column(frequency=1) = ?.?.revenue_core",
    "model.Column(frequency=1) = ?.deals.contract_end_date",
    "model.Column(frequency=1) = ?.deals.contract_start_date",
    "model.Column(frequency=1) = ?.deals_signed.contract_end_date",
    "model.Column(frequency=1) = ?.deals_signed.contract_start_date",
    "model.Column(frequency=1) = ?.deals_signed.deal_id",
    "model.Column(frequency=1) = ?.deals_signed.revenue_aux_day",
    "model.Column(frequency=1) = ?.deals_signed.revenue_core_day",
    "model.Column(frequency=1) = ?.deals_signed.revenue_day",
    "model.Column(frequency=1) = ?.t.deals",
    "model.Column(frequency=1) = ?.t.revenue",
    "model.Column(frequency=1) = ?.t.revenue_aux",
    "model.Column(frequency=1) = ?.t.revenue_core",
    "model.Column(frequency=2) = ?.?.revenue",
    "model.Column(frequency=2) = ?.date_ranges.date_day",
    "model.Column(frequency=2) = ?.orders.product",
    "model.Column(frequency=3) = ?.?.contract_duration_days",
    "model.Column(frequency=3) = ?.?.date_month",
    "model.Column(frequency=3) = ?.orders.value",
    "model.Column(frequency=4) = ?.accounts.industry",
    "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "model.Column(frequency=4) = ?.t.revenue_12m",
    "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "model.Column(frequency=9) = ?.countries.region" ],
  "<class 'src.model.Expression'>": [
    "model.Expression(frequency=1) = Binary_expression(-(Julianday(?.deals.contract_end_date), Julianday(?.deals.contract_start_date)), 1)",
    "model.Expression(frequency=1) = Binary_expression(>=(?.date_ranges.date_day, Date(?.deals_signed.contract_start_date)), <=(?.date_ranges.date_day, Date(?.deals_signed.contract_end_date)))",
    "model.Expression(frequency=1) = Binary_expression(?.?.revenue, ?.?.contract_duration_days)",
    "model.Expression(frequency=1) = Binary_expression(?.?.revenue_aux, ?.?.contract_duration_days)",
    "model.Expression(frequency=1) = Binary_expression(?.?.revenue_core, ?.?.contract_duration_days)",
    "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(<=(?.t.revenue_12m, 300), 'Small'), Casewhen_clause(And(>(?.t.revenue_12m, 300), <=(?.t.revenue_12m, 600)), 'Medium'), Casewhen_clause(>(?.t.revenue_12m, 600), 'Large'), Caseelse_clause(Null()))",
    "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(<=(Sum(?.accounts_revenue.revenue), 300), 'Small'), Casewhen_clause(And(>(Sum(?.accounts_revenue.revenue), 300), <=(Sum(?.accounts_revenue.revenue), 600)), 'Medium'), Casewhen_clause(>(Sum(?.accounts_revenue.revenue), 600), 'Large'), Caseelse_clause(Null()))",
    "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(=(?.accounts.industry, 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(?.accounts.industry, Null()), Null()), Caseelse_clause('Other'))",
    "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(In(?.countries.region, 'Americas'), 'AMER'), Casewhen_clause(In(?.countries.region, Struct('Europe', 'Africa')), 'EMEA'), Casewhen_clause(=(?.countries.region, 'Asia'), 'APAC'), Caseelse_clause(Null()))",
    "model.Expression(frequency=1) = Function_call(Identifier(), Argument(?.?.date_day), Argument('start of month'))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('IT'), Argument('Non-IT'))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('Tech'), Argument('Other'))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.?.revenue), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(?.?.account_id)), Order_by_clause(Order_by_clause_body(?.?.date_month)), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.deal_id))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_aux_day))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_core_day))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_day))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.orders.value))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.deals))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue_aux))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue_core))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Subscription Base', 'Subscription Premium')), ?.orders.value), Caseelse_clause(0))))",
    "model.Expression(frequency=1) = Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Training', 'Consulting')), ?.orders.value), Caseelse_clause(0))))",
    "model.Expression(frequency=2) = Binary_expression(Sum(?.accounts_revenue.revenue), Count(?.accounts_revenue.account_id))",
    "model.Expression(frequency=2) = Function_call(Identifier(), Argument(?.?.date_month), Argument('start of year'))",
    "model.Expression(frequency=2) = Function_call(Identifier, Distinct(), Argument(?.accounts_revenue.account_id))",
    "model.Expression(frequency=3) = Casewhen_expression(Casewhen_clause(In(?.countries.region, Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(?.countries.region, Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))",
    "model.Expression(frequency=3) = Function_call(Identifier, Argument(?.accounts_revenue.revenue))" ],
  "<class 'src.model.Table'>": [
    "model.Table(frequency=1) = ?.accounts_360",
    "model.Table(frequency=1) = ?.date_ranges",
    "model.Table(frequency=1) = ?.deals",
    "model.Table(frequency=1) = ?.deals_signed",
    "model.Table(frequency=1) = ?.orders",
    "model.Table(frequency=4) = ?.accounts",
    "model.Table(frequency=4) = ?.accounts_revenue",
    "model.Table(frequency=4) = ?.countries" ],
  "<class 'src.variations.ExpressionVariation'>": [
    "ExpressionVariation(group=Casewhen_expression(Casewhen_clause(In(?.countries.region, 'Americas'), 'AMER'), Casewhen_clause(In(?.countries.region, Struct('Europe', 'Africa')), 'EMEA'), Casewhen_clause(=(?.countries.region, 'Asia'), 'APAC'), Caseelse_clause(Null())), similarity=0.76)",
    "ExpressionVariation(group=Casewhen_expression(Casewhen_clause(In(?.countries.region, Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(?.countries.region, Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null())), similarity=0.76)",
    "ExpressionVariation(group=Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('IT'), Argument('Non-IT')), similarity=0.94)",
    "ExpressionVariation(group=Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('Tech'), Argument('Other')), similarity=0.94)",
    "ExpressionVariation(group=Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Subscription Base', 'Subscription Premium')), ?.orders.value), Caseelse_clause(0)))), similarity=0.89)",
    "ExpressionVariation(group=Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Training', 'Consulting')), ?.orders.value), Caseelse_clause(0)))), similarity=0.89)" ],
  "<class 'src.variations.ExpressionVariations'>": [
    "ExpressionVariations(0-accounts.sql:37:8-37:105, variations=1)",
    "ExpressionVariations(0-accounts.sql:38:8-38:86, variations=1)",
    "ExpressionVariations(0-accounts.sql:97:8-101:11, variations=1)",
    "ExpressionVariations(1-revenue.sql:32:4-36:7, variations=1)",
    "ExpressionVariations(1-revenue.sql:38:4-38:70, variations=1)",
    "ExpressionVariations(1-revenue.sql:6:4-10:7, variations=1)",
    "ExpressionVariations(editor.sql:12:4-12:62, variations=1)",
    "ExpressionVariations(editor.sql:5:4-10:7, variations=1)" ],
  "<class 'tree_sitter.Node'>": [
    "sql.Node(0:0-111:7) = source_file: -- FOUNDATIONAL TABLES -- Calendar scaffolding: one day per row DROP TABLE IF...",
    "sql.Node(0:0-24:45) = source_file: -- CASE: Different groupings or thresholds applied to columns SELECT date(dat...",
    "sql.Node(0:0-50:50) = source_file: -- REVENUE REPORTS -- Revenue by region, cluster, account size SELECT date(da...",
    "sql.Node(101:15-101:29) = identifier: region_cluster",
    "sql.Node(102:8-102:25) = identifier: accounts.priority",
    "sql.Node(103:12-103:19) = identifier: revenue",
    "sql.Node(103:8-107:9) = function_call: SUM(revenue) OVER ( PARTITION BY account_id ORDER BY date_month ROWS BETWEEN ...",
    "sql.Node(104:25-104:35) = identifier: account_id",
    "sql.Node(105:12-105:31) = order_by_clause: ORDER BY date_month",
    "sql.Node(105:21-105:31) = identifier: date_month",
    "sql.Node(107:13-107:24) = identifier: revenue_12m",
    "sql.Node(108:4-110:45) = from_clause: FROM accounts_revenue JOIN accounts USING (account_id) LEFT JOIN countries c ...",
    "sql.Node(108:9-108:25) = identifier: accounts_revenue",
    "sql.Node(109:13-109:21) = identifier: accounts",
    "sql.Node(109:22-109:40) = join_condition: USING (account_id)",
    "sql.Node(109:29-109:39) = identifier: account_id",
    "sql.Node(10:11-10:23) = identifier: macro_region",
    "sql.Node(10:11-10:25) = identifier: region_cluster",
    "sql.Node(110:18-110:27) = identifier: countries",
    "sql.Node(110:28-110:29) = identifier: c",
    "sql.Node(110:30-110:45) = join_condition: USING (country)",
    "sql.Node(110:37-110:44) = identifier: country",
    "sql.Node(111:5-111:6) = identifier: t",
    "sql.Node(11:4-14:145) = query_expr: SELECT date(date_day, '+1 day') FROM date_ranges WHERE date_day < (SELECT dat...",
    "sql.Node(11:4-15:7) = casewhen_expression: CASE WHEN a.industry = 'Information Technology' THEN 'Tech' WHEN a.industry I...",
    "sql.Node(12:13-12:21) = identifier: date_day",
    "sql.Node(12:13-12:23) = identifier: a.industry",
    "sql.Node(12:4-12:62) = function_call: IIF(a.industry = 'Information Technology', 'IT', 'Non-IT')",
    "sql.Node(12:66-12:77) = identifier: industry_it",
    "sql.Node(12:8-12:18) = identifier: a.industry",
    "sql.Node(12:8-12:32) = function_call: date(date_day, '+1 day')",
    "sql.Node(12:8-12:32) = select_list: date(date_day, '+1 day')",
    "sql.Node(13:13-13:23) = identifier: a.industry",
    "sql.Node(13:23-13:30) = identifier: revenue",
    "sql.Node(13:4-13:19) = function_call: SUM(ar.revenue)",
    "sql.Node(13:4-13:20) = from_clause: FROM date_ranges",
    "sql.Node(13:8-13:18) = identifier: ar.revenue",
    "sql.Node(13:9-13:20) = identifier: date_ranges",
    "sql.Node(14:10-14:18) = identifier: date_day",
    "sql.Node(14:113-14:125) = identifier: d.stage_date",
    "sql.Node(14:132-14:144) = from_clause: FROM deals d",
    "sql.Node(14:137-14:142) = identifier: deals",
    "sql.Node(14:143-14:144) = identifier: d",
    "sql.Node(14:19-14:32) = identifier: ar.account_id",
    "sql.Node(14:22-14:144) = query_expr: SELECT date(MAX(CASE WHEN d.contract_end_date > d.stage_date THEN d.contract_...",
    "sql.Node(14:29-14:131) = function_call: date(MAX(CASE WHEN d.contract_end_date > d.stage_date THEN d.contract_end_dat...",
    "sql.Node(14:29-14:131) = select_list: date(MAX(CASE WHEN d.contract_end_date > d.stage_date THEN d.contract_end_dat...",
    "sql.Node(14:37-14:45) = identifier: accounts",
    "sql.Node(14:4-14:145) = where_clause: WHERE date_day < (SELECT date(MAX(CASE WHEN d.contract_end_date > d.stage_dat...",
    "sql.Node(14:4-14:33) = function_call: COUNT(DISTINCT ar.account_id)",
    "sql.Node(14:48-14:67) = identifier: d.contract_end_date",
    "sql.Node(14:70-14:82) = identifier: d.stage_date",
    "sql.Node(14:88-14:107) = identifier: d.contract_end_date",
    "sql.Node(15:11-15:27) = identifier: industry_cluster",
    "sql.Node(15:37-15:50) = identifier: ar.account_id",
    "sql.Node(15:4-15:51) = binary_expression: SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)",
    "sql.Node(15:55-15:74) = identifier: revenue_per_account",
    "sql.Node(15:8-15:18) = identifier: ar.revenue",
    "sql.Node(16:0-18:41) = from_clause: FROM accounts_revenue ar LEFT JOIN accounts a USING (account_id) LEFT JOIN co...",
    "sql.Node(16:22-16:24) = identifier: ar",
    "sql.Node(16:4-16:21) = identifier: a360.account_size",
    "sql.Node(16:5-16:21) = identifier: accounts_revenue",
    "sql.Node(17:14-17:22) = identifier: accounts",
    "sql.Node(17:23-17:24) = identifier: a",
    "sql.Node(17:23-17:30) = identifier: revenue",
    "sql.Node(17:25-17:43) = join_condition: USING (account_id)",
    "sql.Node(17:32-17:42) = identifier: account_id",
    "sql.Node(17:4-17:12) = identifier: date_day",
    "sql.Node(17:4-17:12) = select_list: date_day",
    "sql.Node(17:4-17:19) = function_call: SUM(ar.revenue)",
    "sql.Node(17:8-17:18) = identifier: ar.revenue",
    "sql.Node(18:0-18:16) = from_clause: FROM date_ranges",
    "sql.Node(18:14-18:23) = identifier: countries",
    "sql.Node(18:19-18:32) = identifier: ar.account_id",
    "sql.Node(18:24-18:25) = identifier: c",
    "sql.Node(18:26-18:41) = join_condition: USING (country)",
    "sql.Node(18:33-18:40) = identifier: country",
    "sql.Node(18:37-18:45) = identifier: accounts",
    "sql.Node(18:4-18:33) = function_call: COUNT(DISTINCT ar.account_id)",
    "sql.Node(18:5-18:16) = identifier: date_ranges",
    "sql.Node(19:0-19:17) = group_by_clause: GROUP BY date_day",
    "sql.Node(19:0-23:68) = where_clause: WHERE -- This is appropriate, user can do ad-hoc filters for any subsets a.in...",
    "sql.Node(19:37-19:50) = identifier: ar.account_id",
    "sql.Node(19:4-19:51) = binary_expression: SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)",
    "sql.Node(19:55-19:74) = identifier: revenue_per_account",
    "sql.Node(19:8-19:18) = identifier: ar.revenue",
    "sql.Node(19:9-19:17) = identifier: date_day",
    "sql.Node(20:0-23:62) = from_clause: FROM accounts_revenue ar LEFT JOIN accounts a USING (account_id) LEFT JOIN co...",
    "sql.Node(20:22-20:24) = identifier: ar",
    "sql.Node(20:5-20:21) = identifier: accounts_revenue",
    "sql.Node(21:14-21:22) = identifier: accounts",
    "sql.Node(21:23-21:24) = identifier: a",
    "sql.Node(21:25-21:43) = join_condition: USING (account_id)",
    "sql.Node(21:32-21:42) = identifier: account_id",
    "sql.Node(21:4-21:14) = identifier: a.industry",
    "sql.Node(22:14-22:23) = identifier: countries",
    "sql.Node(22:24-22:25) = identifier: c",
    "sql.Node(22:26-22:41) = join_condition: USING (country)",
    "sql.Node(22:33-22:40) = identifier: country",
    "sql.Node(23:14-23:26) = identifier: accounts_360",
    "sql.Node(23:27-23:31) = identifier: a360",
    "sql.Node(23:32-23:62) = join_condition: USING (account_id, date_month)",
    "sql.Node(23:39-23:49) = identifier: account_id",
    "sql.Node(23:51-23:61) = identifier: date_month",
    "sql.Node(23:8-23:18) = identifier: date_month",
    "sql.Node(24:0-24:45) = group_by_clause: GROUP BY date_year, macro_region, industry_it",
    "sql.Node(24:0-24:71) = group_by_clause: GROUP BY date_year, region_cluster, industry_cluster, a360.account_size",
    "sql.Node(24:20-24:32) = identifier: macro_region",
    "sql.Node(24:20-24:34) = identifier: region_cluster",
    "sql.Node(24:34-24:45) = identifier: industry_it",
    "sql.Node(24:36-24:52) = identifier: industry_cluster",
    "sql.Node(24:54-24:71) = identifier: a360.account_size",
    "sql.Node(24:9-24:18) = identifier: date_year",
    "sql.Node(24:9-24:18) = identifier: date_year",
    "sql.Node(25:0-25:52) = order_by_clause: ORDER BY date_year, region_cluster, industry_cluster",
    "sql.Node(25:0-44:6) = query_expr: SELECT *, revenue / contract_duration_days AS revenue_day, revenue_core / con...",
    "sql.Node(25:20-25:34) = identifier: region_cluster",
    "sql.Node(25:36-25:52) = identifier: industry_cluster",
    "sql.Node(25:9-25:18) = identifier: date_year",
    "sql.Node(26:4-26:5) = select_all: *",
    "sql.Node(26:4-29:59) = select_list: *, revenue / contract_duration_days AS revenue_day, revenue_core / contract_d...",
    "sql.Node(27:14-27:36) = identifier: contract_duration_days",
    "sql.Node(27:4-27:11) = identifier: revenue",
    "sql.Node(27:4-27:36) = binary_expression: revenue / contract_duration_days",
    "sql.Node(27:40-27:51) = identifier: revenue_day",
    "sql.Node(28:19-28:41) = identifier: contract_duration_days",
    "sql.Node(28:4-28:16) = identifier: revenue_core",
    "sql.Node(28:4-28:41) = binary_expression: revenue_core / contract_duration_days",
    "sql.Node(28:45-28:61) = identifier: revenue_core_day",
    "sql.Node(29:0-50:49) = query_expr: SELECT accounts.name, region, CASE WHEN c.region IN ('Americas', 'Europe') TH...",
    "sql.Node(29:18-29:40) = identifier: contract_duration_days",
    "sql.Node(29:4-29:15) = identifier: revenue_aux",
    "sql.Node(29:4-29:40) = binary_expression: revenue_aux / contract_duration_days",
    "sql.Node(29:44-29:59) = identifier: revenue_aux_day",
    "sql.Node(2:0-24:45) = query_expr: SELECT date(date_month, 'start of year') AS date_year, -- This should cause a...",
    "sql.Node(30:0-44:6) = from_clause: FROM ( SELECT d.deal_id, d.account_id, d.contract_start_date, d.contract_end_...",
    "sql.Node(30:4-30:17) = identifier: accounts.name",
    "sql.Node(30:4-45:48) = select_list: accounts.name, region, CASE WHEN c.region IN ('Americas', 'Europe') THEN 'Nor...",
    "sql.Node(31:4-31:10) = identifier: region",
    "sql.Node(31:4-43:80) = query_expr: SELECT d.deal_id, d.account_id, d.contract_start_date, d.contract_end_date, j...",
    "sql.Node(32:4-36:7) = casewhen_expression: CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "sql.Node(32:8-32:17) = identifier: d.deal_id",
    "sql.Node(32:8-39:31) = select_list: d.deal_id, d.account_id, d.contract_start_date, d.contract_end_date, julianda...",
    "sql.Node(33:13-33:21) = identifier: c.region",
    "sql.Node(33:8-33:20) = identifier: d.account_id",
    "sql.Node(34:13-34:21) = identifier: c.region",
    "sql.Node(34:8-34:29) = identifier: d.contract_start_date",
    "sql.Node(35:8-35:27) = identifier: d.contract_end_date",
    "sql.Node(36:11-36:18) = identifier: cluster",
    "sql.Node(36:18-36:37) = identifier: d.contract_end_date",
    "sql.Node(36:51-36:72) = identifier: d.contract_start_date",
    "sql.Node(36:8-36:77) = binary_expression: julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1",
    "sql.Node(36:81-36:103) = identifier: contract_duration_days",
    "sql.Node(37:109-37:121) = identifier: revenue_core",
    "sql.Node(37:22-37:31) = identifier: o.product",
    "sql.Node(37:25-37:33) = identifier: industry",
    "sql.Node(37:4-37:21) = identifier: accounts.industry",
    "sql.Node(37:8-37:105) = function_call: SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN...",
    "sql.Node(37:86-37:93) = identifier: o.value",
    "sql.Node(38:22-38:31) = identifier: o.product",
    "sql.Node(38:4-38:70) = function_call: IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')",
    "sql.Node(38:67-38:74) = identifier: o.value",
    "sql.Node(38:74-38:87) = identifier: industry_tech",
    "sql.Node(38:8-38:25) = identifier: accounts.industry",
    "sql.Node(38:8-38:86) = function_call: SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)",
    "sql.Node(38:90-38:101) = identifier: revenue_aux",
    "sql.Node(39:12-39:19) = identifier: o.value",
    "sql.Node(39:24-39:31) = identifier: revenue",
    "sql.Node(39:4-44:7) = casewhen_expression: CASE WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small' WHEN SUM(accounts...",
    "sql.Node(39:8-39:20) = function_call: SUM(o.value)",
    "sql.Node(3:4-15:74) = select_list: date(date_month, 'start of year') AS date_year, -- This should cause an error...",
    "sql.Node(3:4-3:37) = function_call: date(date_month, 'start of year')",
    "sql.Node(3:41-3:50) = identifier: date_year",
    "sql.Node(3:9-3:19) = identifier: date_month",
    "sql.Node(40:16-40:17) = identifier: o",
    "sql.Node(40:17-40:41) = identifier: accounts_revenue.revenue",
    "sql.Node(40:4-41:46) = from_clause: FROM orders o JOIN deals d USING (deal_id, order_id)",
    "sql.Node(40:9-40:15) = identifier: orders",
    "sql.Node(41:13-41:18) = identifier: deals",
    "sql.Node(41:17-41:41) = identifier: accounts_revenue.revenue",
    "sql.Node(41:19-41:20) = identifier: d",
    "sql.Node(41:21-41:46) = join_condition: USING (deal_id, order_id)",
    "sql.Node(41:28-41:35) = identifier: deal_id",
    "sql.Node(41:37-41:45) = identifier: order_id",
    "sql.Node(41:57-41:81) = identifier: accounts_revenue.revenue",
    "sql.Node(42:10-42:17) = identifier: d.stage",
    "sql.Node(42:17-42:41) = identifier: accounts_revenue.revenue",
    "sql.Node(42:4-42:21) = where_clause: WHERE d.stage = 4",
    "sql.Node(43:13-43:22) = identifier: d.deal_id",
    "sql.Node(43:24-43:36) = identifier: d.account_id",
    "sql.Node(43:38-43:59) = identifier: d.contract_start_date",
    "sql.Node(43:4-43:80) = group_by_clause: GROUP BY d.deal_id, d.account_id, d.contract_start_date, d.contract_end_date",
    "sql.Node(43:61-43:80) = identifier: d.contract_end_date",
    "sql.Node(44:11-44:23) = identifier: account_size",
    "sql.Node(44:5-44:6) = identifier: t",
    "sql.Node(45:37-45:48) = identifier: revenue_12m",
    "sql.Node(45:4-45:33) = function_call: SUM(accounts_revenue.revenue)",
    "sql.Node(45:8-45:32) = identifier: accounts_revenue.revenue",
    "sql.Node(46:0-48:41) = from_clause: FROM accounts LEFT JOIN accounts_revenue USING (account_id) LEFT JOIN countri...",
    "sql.Node(46:5-46:13) = identifier: accounts",
    "sql.Node(47:14-47:30) = identifier: accounts_revenue",
    "sql.Node(47:31-47:49) = join_condition: USING (account_id)",
    "sql.Node(47:38-47:48) = identifier: account_id",
    "sql.Node(48:14-48:23) = identifier: countries",
    "sql.Node(48:24-48:25) = identifier: c",
    "sql.Node(48:26-48:41) = join_condition: USING (country)",
    "sql.Node(48:33-48:40) = identifier: country",
    "sql.Node(49:0-49:83) = where_clause: WHERE accounts_revenue.date_month BETWEEN DATE('now', '-12 months') AND DATE(...",
    "sql.Node(49:6-49:33) = identifier: accounts_revenue.date_month",
    "sql.Node(4:0-25:52) = query_expr: SELECT date(date_month, 'start of year') AS date_year, CASE WHEN c.region IN ...",
    "sql.Node(50:0-50:49) = group_by_clause: GROUP BY accounts.name, region, accounts.industry",
    "sql.Node(50:0-71:31) = query_expr: SELECT t.date_month, t.account_id, AVG(t.deals) AS deals, SUM(t.revenue_core)...",
    "sql.Node(50:24-50:30) = identifier: region",
    "sql.Node(50:32-50:49) = identifier: accounts.industry",
    "sql.Node(50:9-50:22) = identifier: accounts.name",
    "sql.Node(51:4-51:16) = identifier: t.date_month",
    "sql.Node(51:4-56:29) = select_list: t.date_month, t.account_id, AVG(t.deals) AS deals, SUM(t.revenue_core) AS rev...",
    "sql.Node(52:4-52:16) = identifier: t.account_id",
    "sql.Node(53:20-53:25) = identifier: deals",
    "sql.Node(53:4-53:16) = function_call: AVG(t.deals)",
    "sql.Node(53:8-53:15) = identifier: t.deals",
    "sql.Node(54:27-54:39) = identifier: revenue_core",
    "sql.Node(54:4-54:23) = function_call: SUM(t.revenue_core)",
    "sql.Node(54:8-54:22) = identifier: t.revenue_core",
    "sql.Node(55:26-55:37) = identifier: revenue_aux",
    "sql.Node(55:4-55:22) = function_call: SUM(t.revenue_aux)",
    "sql.Node(55:8-55:21) = identifier: t.revenue_aux",
    "sql.Node(56:22-56:29) = identifier: revenue",
    "sql.Node(56:4-56:18) = function_call: SUM(t.revenue)",
    "sql.Node(56:8-56:17) = identifier: t.revenue",
    "sql.Node(57:0-70:42) = from_clause: FROM ( SELECT dr.date_day, DATE(date_day, 'start of month') AS date_month, ds...",
    "sql.Node(58:4-70:39) = query_expr: SELECT dr.date_day, DATE(date_day, 'start of month') AS date_month, ds.accoun...",
    "sql.Node(59:8-59:19) = identifier: dr.date_day",
    "sql.Node(59:8-65:38) = select_list: dr.date_day, DATE(date_day, 'start of month') AS date_month, ds.account_id, C...",
    "sql.Node(5:4-10:7) = casewhen_expression: CASE WHEN c.region IN ('Americas') THEN 'AMER' WHEN c.region IN ('Europe', 'A...",
    "sql.Node(5:4-19:74) = select_list: date(date_month, 'start of year') AS date_year, CASE WHEN c.region IN ('Ameri...",
    "sql.Node(5:4-5:37) = function_call: date(date_month, 'start of year')",
    "sql.Node(5:41-5:50) = identifier: date_year",
    "sql.Node(5:9-5:19) = identifier: date_month",
    "sql.Node(60:13-60:21) = identifier: date_day",
    "sql.Node(60:44-60:54) = identifier: date_month",
    "sql.Node(60:8-60:40) = function_call: DATE(date_day, 'start of month')",
    "sql.Node(61:8-61:21) = identifier: ds.account_id",
    "sql.Node(62:14-62:24) = identifier: ds.deal_id",
    "sql.Node(62:29-62:34) = identifier: deals",
    "sql.Node(62:8-62:25) = function_call: COUNT(ds.deal_id)",
    "sql.Node(63:12-63:31) = identifier: ds.revenue_core_day",
    "sql.Node(63:36-63:48) = identifier: revenue_core",
    "sql.Node(63:8-63:32) = function_call: SUM(ds.revenue_core_day)",
    "sql.Node(64:12-64:30) = identifier: ds.revenue_aux_day",
    "sql.Node(64:35-64:46) = identifier: revenue_aux",
    "sql.Node(64:8-64:31) = function_call: SUM(ds.revenue_aux_day)",
    "sql.Node(65:12-65:26) = identifier: ds.revenue_day",
    "sql.Node(65:31-65:38) = identifier: revenue",
    "sql.Node(65:8-65:27) = function_call: SUM(ds.revenue_day)",
    "sql.Node(66:21-66:23) = identifier: dr",
    "sql.Node(66:4-69:57) = from_clause: FROM date_ranges dr LEFT JOIN deals_signed ds ON dr.date_day >= date(ds.contr...",
    "sql.Node(66:9-66:20) = identifier: date_ranges",
    "sql.Node(67:18-67:30) = identifier: deals_signed",
    "sql.Node(67:31-67:33) = identifier: ds",
    "sql.Node(68:12-69:57) = join_condition: ON dr.date_day >= date(ds.contract_start_date) AND dr.date_day <= date(ds.con...",
    "sql.Node(68:16-68:27) = identifier: dr.date_day",
    "sql.Node(68:16-69:57) = binary_expression: dr.date_day >= date(ds.contract_start_date) AND dr.date_day <= date(ds.contra...",
    "sql.Node(68:36-68:58) = identifier: ds.contract_start_date",
    "sql.Node(69:16-69:27) = identifier: dr.date_day",
    "sql.Node(69:36-69:56) = identifier: ds.contract_end_date",
    "sql.Node(6:0-19:17) = query_expr: WITH RECURSIVE date_ranges(date_day) AS ( SELECT date(MIN(CASE WHEN d.stage_d...",
    "sql.Node(6:13-6:21) = identifier: c.region",
    "sql.Node(6:4-10:7) = casewhen_expression: CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "sql.Node(70:13-70:24) = identifier: dr.date_day",
    "sql.Node(70:26-70:39) = identifier: ds.account_id",
    "sql.Node(70:4-70:39) = group_by_clause: GROUP BY dr.date_day, ds.account_id",
    "sql.Node(70:41-70:42) = identifier: t",
    "sql.Node(71:0-71:31) = group_by_clause: GROUP BY account_id, date_month",
    "sql.Node(71:21-71:31) = identifier: date_month",
    "sql.Node(71:9-71:19) = identifier: account_id",
    "sql.Node(78:0-111:6) = query_expr: SELECT t.*, CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > ...",
    "sql.Node(79:4-79:7) = select_all: t.*",
    "sql.Node(79:4-85:23) = select_list: t.*, CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > 300 AND...",
    "sql.Node(7:13-7:21) = identifier: c.region",
    "sql.Node(7:13-7:21) = identifier: c.region",
    "sql.Node(7:4-14:145) = query_expr: SELECT date(MIN(CASE WHEN d.stage_date < d.contract_start_date THEN d.stage_d...",
    "sql.Node(7:4-9:16) = query_expr: SELECT date(MIN(CASE WHEN d.stage_date < d.contract_start_date THEN d.stage_d...",
    "sql.Node(80:4-85:7) = casewhen_expression: CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > 300 AND t.re...",
    "sql.Node(81:13-81:26) = identifier: t.revenue_12m",
    "sql.Node(82:13-82:26) = identifier: t.revenue_12m",
    "sql.Node(82:37-82:50) = identifier: t.revenue_12m",
    "sql.Node(83:13-83:26) = identifier: t.revenue_12m",
    "sql.Node(85:11-85:23) = identifier: account_size",
    "sql.Node(86:0-111:6) = from_clause: FROM ( SELECT account_id, date_month, revenue, revenue_core, revenue_aux, dea...",
    "sql.Node(87:4-110:45) = query_expr: SELECT account_id, date_month, revenue, revenue_core, revenue_aux, deals, acc...",
    "sql.Node(88:8-107:24) = select_list: account_id, date_month, revenue, revenue_core, revenue_aux, deals, accounts.n...",
    "sql.Node(88:8-88:18) = identifier: account_id",
    "sql.Node(89:8-89:18) = identifier: date_month",
    "sql.Node(8:118-8:128) = identifier: date_month",
    "sql.Node(8:13-8:21) = identifier: c.region",
    "sql.Node(8:13-8:21) = identifier: c.region",
    "sql.Node(8:27-8:39) = identifier: d.stage_date",
    "sql.Node(8:42-8:63) = identifier: d.contract_start_date",
    "sql.Node(8:69-8:81) = identifier: d.stage_date",
    "sql.Node(8:8-8:114) = function_call: date(MIN(CASE WHEN d.stage_date < d.contract_start_date THEN d.stage_date ELS...",
    "sql.Node(8:8-8:128) = select_list: date(MIN(CASE WHEN d.stage_date < d.contract_start_date THEN d.stage_date ELS...",
    "sql.Node(8:87-8:108) = identifier: d.contract_start_date",
    "sql.Node(90:8-90:15) = identifier: revenue",
    "sql.Node(91:8-91:20) = identifier: revenue_core",
    "sql.Node(92:8-92:19) = identifier: revenue_aux",
    "sql.Node(93:8-93:13) = identifier: deals",
    "sql.Node(94:8-94:21) = identifier: accounts.name",
    "sql.Node(95:8-95:25) = identifier: accounts.industry",
    "sql.Node(96:8-96:24) = identifier: accounts.country",
    "sql.Node(97:8-101:11) = casewhen_expression: CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...",
    "sql.Node(98:17-98:25) = identifier: c.region",
    "sql.Node(99:17-99:25) = identifier: c.region",
    "sql.Node(9:15-9:16) = identifier: d",
    "sql.Node(9:4-9:16) = from_clause: FROM deals d",
    "sql.Node(9:9-9:14) = identifier: deals" ],
  "<class 'tree_sitter.Tree'>": [
    "sql.Tree(0:0-111:7) = source_file: -- FOUNDATIONAL TABLES -- Calendar scaffolding: one day per row DROP TABLE IF...",
    "sql.Tree(0:0-24:45) = source_file: -- CASE: Different groupings or thresholds applied to columns SELECT date(dat...",
    "sql.Tree(0:0-50:50) = source_file: -- REVENUE REPORTS -- Revenue by region, cluster, account size SELECT date(da..." ] }