{
  "(<class 'src.code.Column'>, <class 'src.model.Column'>, ('_code',))": {
    "code.Column(0-accounts.sql:103:12-103:19) = ?.?.revenue": "model.Column(frequency=2) = ?.?.revenue",
    "code.Column(0-accounts.sql:104:25-104:35) = ?.?.account_id": "model.Column(frequency=1) = ?.?.account_id",
    "code.Column(0-accounts.sql:105:21-105:31) = ?.?.date_month": "model.Column(frequency=3) = ?.?.date_month",
    "code.Column(0-accounts.sql:27:14-27:36) = ?.?.contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:27:4-27:11) = ?.?.revenue": "model.Column(frequency=2) = ?.?.revenue",
    "code.Column(0-accounts.sql:28:19-28:41) = ?.?.contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:28:4-28:16) = ?.?.revenue_core": "model.Column(frequency=1) = ?.?.revenue_core",
    "code.Column(0-accounts.sql:29:18-29:40) = ?.?.contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "code.Column(0-accounts.sql:29:4-29:15) = ?.?.revenue_aux": "model.Column(frequency=1) = ?.?.revenue_aux",
    "code.Column(0-accounts.sql:36:18-36:37) = ?.d.contract_end_date": "model.Column(frequency=1) = ?.deals.contract_end_date",
    "code.Column(0-accounts.sql:36:51-36:72) = ?.d.contract_start_date": "model.Column(frequency=1) = ?.deals.contract_start_date",
    "code.Column(0-accounts.sql:37:22-37:31) = ?.o.product": "model.Column(frequency=2) = ?.orders.product",
    "code.Column(0-accounts.sql:37:86-37:93) = ?.o.value": "model.Column(frequency=3) = ?.orders.value",
    "code.Column(0-accounts.sql:38:22-38:31) = ?.o.product": "model.Column(frequency=2) = ?.orders.product",
    "code.Column(0-accounts.sql:38:67-38:74) = ?.o.value": "model.Column(frequency=3) = ?.orders.value",
    "code.Column(0-accounts.sql:39:12-39:19) = ?.o.value": "model.Column(frequency=3) = ?.orders.value",
    "code.Column(0-accounts.sql:53:8-53:15) = ?.t.deals": "model.Column(frequency=1) = ?.t.deals",
    "code.Column(0-accounts.sql:54:8-54:22) = ?.t.revenue_core": "model.Column(frequency=1) = ?.t.revenue_core",
    "code.Column(0-accounts.sql:55:8-55:21) = ?.t.revenue_aux": "model.Column(frequency=1) = ?.t.revenue_aux",
    "code.Column(0-accounts.sql:56:8-56:17) = ?.t.revenue": "model.Column(frequency=1) = ?.t.revenue",
    "code.Column(0-accounts.sql:60:13-60:21) = ?.?.date_day": "model.Column(frequency=1) = ?.?.date_day",
    "code.Column(0-accounts.sql:62:14-62:24) = ?.ds.deal_id": "model.Column(frequency=1) = ?.deals_signed.deal_id",
    "code.Column(0-accounts.sql:63:12-63:31) = ?.ds.revenue_core_day": "model.Column(frequency=1) = ?.deals_signed.revenue_core_day",
    "code.Column(0-accounts.sql:64:12-64:30) = ?.ds.revenue_aux_day": "model.Column(frequency=1) = ?.deals_signed.revenue_aux_day",
    "code.Column(0-accounts.sql:65:12-65:26) = ?.ds.revenue_day": "model.Column(frequency=1) = ?.deals_signed.revenue_day",
    "code.Column(0-accounts.sql:68:16-68:27) = ?.dr.date_day": "model.Column(frequency=2) = ?.date_ranges.date_day",
    "code.Column(0-accounts.sql:68:36-68:58) = ?.ds.contract_start_date": "model.Column(frequency=1) = ?.deals_signed.contract_start_date",
    "code.Column(0-accounts.sql:69:16-69:27) = ?.dr.date_day": "model.Column(frequency=2) = ?.date_ranges.date_day",
    "code.Column(0-accounts.sql:69:36-69:56) = ?.ds.contract_end_date": "model.Column(frequency=1) = ?.deals_signed.contract_end_date",
    "code.Column(0-accounts.sql:81:13-81:26) = ?.t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:82:13-82:26) = ?.t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:82:37-82:50) = ?.t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:83:13-83:26) = ?.t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "code.Column(0-accounts.sql:98:17-98:25) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(0-accounts.sql:99:17-99:25) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(1-revenue.sql:12:13-12:23) = ?.a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "code.Column(1-revenue.sql:13:13-13:23) = ?.a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "code.Column(1-revenue.sql:17:8-17:18) = ?.ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:18:19-18:32) = ?.ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "code.Column(1-revenue.sql:19:37-19:50) = ?.ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "code.Column(1-revenue.sql:19:8-19:18) = ?.ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:33:13-33:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(1-revenue.sql:34:13-34:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(1-revenue.sql:38:8-38:25) = ?.accounts.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "code.Column(1-revenue.sql:40:17-40:41) = ?.accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:41:17-41:41) = ?.accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:41:57-41:81) = ?.accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:42:17-42:41) = ?.accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:45:8-45:32) = ?.accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(1-revenue.sql:5:9-5:19) = ?.?.date_month": "model.Column(frequency=3) = ?.?.date_month",
    "code.Column(1-revenue.sql:7:13-7:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(1-revenue.sql:8:13-8:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(editor.sql:12:8-12:18) = ?.a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "code.Column(editor.sql:13:8-13:18) = ?.ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(editor.sql:14:19-14:32) = ?.ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "code.Column(editor.sql:15:37-15:50) = ?.ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "code.Column(editor.sql:15:8-15:18) = ?.ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "code.Column(editor.sql:3:9-3:19) = ?.?.date_month": "model.Column(frequency=3) = ?.?.date_month",
    "code.Column(editor.sql:6:13-6:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(editor.sql:7:13-7:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region",
    "code.Column(editor.sql:8:13-8:21) = ?.c.region": "model.Column(frequency=9) = ?.countries.region" },
  "(<class 'src.code.Expression'>, <class 'src.model.Expression'>, ('_code',))": {
    "code.Expression(0-accounts.sql:103:8-107:9) = SUM(revenue) OVER ( PARTITION BY account_id ORDER BY date_month ROWS BETWEEN ...": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.?.revenue), Analytics_clause(Over_clause(Window_specification(Window_partition_clause(Partition_expression(?.?.account_id)), Order_by_clause(Order_by_clause_body(?.?.date_month)), Window_frame_clause(Rows_range(), Window_frame_between(Between_from(11), Between_to(Keyword_current_row())))))))",
    "code.Expression(0-accounts.sql:27:4-27:36) = revenue / contract_duration_days": "model.Expression(frequency=1) = Binary_expression(?.?.revenue, ?.?.contract_duration_days)",
    "code.Expression(0-accounts.sql:28:4-28:41) = revenue_core / contract_duration_days": "model.Expression(frequency=1) = Binary_expression(?.?.revenue_core, ?.?.contract_duration_days)",
    "code.Expression(0-accounts.sql:29:4-29:40) = revenue_aux / contract_duration_days": "model.Expression(frequency=1) = Binary_expression(?.?.revenue_aux, ?.?.contract_duration_days)",
    "code.Expression(0-accounts.sql:36:8-36:77) = julianday(d.contract_end_date) - julianday(d.contract_start_date) + 1": "model.Expression(frequency=1) = Binary_expression(-(Julianday(?.deals.contract_end_date), Julianday(?.deals.contract_start_date)), 1)",
    "code.Expression(0-accounts.sql:37:8-37:105) = SUM(CASE WHEN o.product IN ('Subscription Base', 'Subscription Premium') THEN...": "model.Expression(frequency=1) = Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Subscription Base', 'Subscription Premium')), ?.orders.value), Caseelse_clause(0))))",
    "code.Expression(0-accounts.sql:38:8-38:86) = SUM(CASE WHEN o.product IN ('Training', 'Consulting') THEN o.value ELSE 0 END)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(Casewhen_expression(Casewhen_clause(In(?.orders.product, Struct('Training', 'Consulting')), ?.orders.value), Caseelse_clause(0))))",
    "code.Expression(0-accounts.sql:39:8-39:20) = SUM(o.value)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.orders.value))",
    "code.Expression(0-accounts.sql:53:4-53:16) = AVG(t.deals)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.deals))",
    "code.Expression(0-accounts.sql:54:4-54:23) = SUM(t.revenue_core)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue_core))",
    "code.Expression(0-accounts.sql:55:4-55:22) = SUM(t.revenue_aux)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue_aux))",
    "code.Expression(0-accounts.sql:56:4-56:18) = SUM(t.revenue)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.t.revenue))",
    "code.Expression(0-accounts.sql:60:8-60:40) = DATE(date_day, 'start of month')": "model.Expression(frequency=1) = Function_call(Identifier(), Argument(?.?.date_day), Argument('start of month'))",
    "code.Expression(0-accounts.sql:62:8-62:25) = COUNT(ds.deal_id)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.deal_id))",
    "code.Expression(0-accounts.sql:63:8-63:32) = SUM(ds.revenue_core_day)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_core_day))",
    "code.Expression(0-accounts.sql:64:8-64:31) = SUM(ds.revenue_aux_day)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_aux_day))",
    "code.Expression(0-accounts.sql:65:8-65:27) = SUM(ds.revenue_day)": "model.Expression(frequency=1) = Function_call(Identifier, Argument(?.deals_signed.revenue_day))",
    "code.Expression(0-accounts.sql:68:16-69:57) = dr.date_day >= date(ds.contract_start_date) AND dr.date_day <= date(ds.contra...": "model.Expression(frequency=1) = Binary_expression(>=(?.date_ranges.date_day, Date(?.deals_signed.contract_start_date)), <=(?.date_ranges.date_day, Date(?.deals_signed.contract_end_date)))",
    "code.Expression(0-accounts.sql:80:4-85:7) = CASE WHEN t.revenue_12m <= 300 THEN 'Small' WHEN t.revenue_12m > 300 AND t.re...": "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(<=(?.t.revenue_12m, 300), 'Small'), Casewhen_clause(And(>(?.t.revenue_12m, 300), <=(?.t.revenue_12m, 600)), 'Medium'), Casewhen_clause(>(?.t.revenue_12m, 600), 'Large'), Caseelse_clause(Null()))",
    "code.Expression(0-accounts.sql:97:8-101:11) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...": "model.Expression(frequency=3) = Casewhen_expression(Casewhen_clause(In(?.countries.region, Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(?.countries.region, Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))",
    "code.Expression(1-revenue.sql:11:4-15:7) = CASE WHEN a.industry = 'Information Technology' THEN 'Tech' WHEN a.industry I...": "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(=(?.accounts.industry, 'Information Technology'), 'Tech'), Casewhen_clause(Unary_expression(?.accounts.industry, Null()), Null()), Caseelse_clause('Other'))",
    "code.Expression(1-revenue.sql:17:4-17:19) = SUM(ar.revenue)": "model.Expression(frequency=3) = Function_call(Identifier, Argument(?.accounts_revenue.revenue))",
    "code.Expression(1-revenue.sql:18:4-18:33) = COUNT(DISTINCT ar.account_id)": "model.Expression(frequency=2) = Function_call(Identifier, Distinct(), Argument(?.accounts_revenue.account_id))",
    "code.Expression(1-revenue.sql:19:4-19:51) = SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)": "model.Expression(frequency=2) = Binary_expression(Sum(?.accounts_revenue.revenue), Count(?.accounts_revenue.account_id))",
    "code.Expression(1-revenue.sql:32:4-36:7) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...": "model.Expression(frequency=3) = Casewhen_expression(Casewhen_clause(In(?.countries.region, Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(?.countries.region, Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))",
    "code.Expression(1-revenue.sql:38:4-38:70) = IIF(accounts.industry = 'Information Technology', 'Tech', 'Other')": "model.Expression(frequency=1) = Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('Tech'), Argument('Other'))",
    "code.Expression(1-revenue.sql:39:4-44:7) = CASE WHEN SUM(accounts_revenue.revenue) <= 300 THEN 'Small' WHEN SUM(accounts...": "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(<=(Sum(?.accounts_revenue.revenue), 300), 'Small'), Casewhen_clause(And(>(Sum(?.accounts_revenue.revenue), 300), <=(Sum(?.accounts_revenue.revenue), 600)), 'Medium'), Casewhen_clause(>(Sum(?.accounts_revenue.revenue), 600), 'Large'), Caseelse_clause(Null()))",
    "code.Expression(1-revenue.sql:45:4-45:33) = SUM(accounts_revenue.revenue)": "model.Expression(frequency=3) = Function_call(Identifier, Argument(?.accounts_revenue.revenue))",
    "code.Expression(1-revenue.sql:5:4-5:37) = date(date_month, 'start of year')": "model.Expression(frequency=2) = Function_call(Identifier(), Argument(?.?.date_month), Argument('start of year'))",
    "code.Expression(1-revenue.sql:6:4-10:7) = CASE WHEN c.region IN ('Americas', 'Europe') THEN 'North-West' WHEN c.region ...": "model.Expression(frequency=3) = Casewhen_expression(Casewhen_clause(In(?.countries.region, Struct('Americas', 'Europe')), 'North-West'), Casewhen_clause(In(?.countries.region, Struct('Africa', 'Asia')), 'South-East'), Caseelse_clause(Null()))",
    "code.Expression(editor.sql:12:4-12:62) = IIF(a.industry = 'Information Technology', 'IT', 'Non-IT')": "model.Expression(frequency=1) = Function_call(Identifier, Argument(=(?.accounts.industry, 'Information Technology')), Argument('IT'), Argument('Non-IT'))",
    "code.Expression(editor.sql:13:4-13:19) = SUM(ar.revenue)": "model.Expression(frequency=3) = Function_call(Identifier, Argument(?.accounts_revenue.revenue))",
    "code.Expression(editor.sql:14:4-14:33) = COUNT(DISTINCT ar.account_id)": "model.Expression(frequency=2) = Function_call(Identifier, Distinct(), Argument(?.accounts_revenue.account_id))",
    "code.Expression(editor.sql:15:4-15:51) = SUM(ar.revenue) / COUNT(DISTINCT ar.account_id)": "model.Expression(frequency=2) = Binary_expression(Sum(?.accounts_revenue.revenue), Count(?.accounts_revenue.account_id))",
    "code.Expression(editor.sql:3:4-3:37) = date(date_month, 'start of year')": "model.Expression(frequency=2) = Function_call(Identifier(), Argument(?.?.date_month), Argument('start of year'))",
    "code.Expression(editor.sql:5:4-10:7) = CASE WHEN c.region IN ('Americas') THEN 'AMER' WHEN c.region IN ('Europe', 'A...": "model.Expression(frequency=1) = Casewhen_expression(Casewhen_clause(In(?.countries.region, 'Americas'), 'AMER'), Casewhen_clause(In(?.countries.region, Struct('Europe', 'Africa')), 'EMEA'), Casewhen_clause(=(?.countries.region, 'Asia'), 'APAC'), Caseelse_clause(Null()))" },
  "(<class 'tree_sitter.Node'>, <class 'src.model.Column'>, ('_node', '_code'))": {
    "sql.Node(103:12-103:19) = identifier: revenue": "model.Column(frequency=2) = ?.?.revenue",
    "sql.Node(104:25-104:35) = identifier: account_id": "model.Column(frequency=1) = ?.?.account_id",
    "sql.Node(105:21-105:31) = identifier: date_month": "model.Column(frequency=3) = ?.?.date_month",
    "sql.Node(12:13-12:23) = identifier: a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "sql.Node(12:8-12:18) = identifier: a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "sql.Node(13:13-13:23) = identifier: a.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "sql.Node(13:8-13:18) = identifier: ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(14:19-14:32) = identifier: ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "sql.Node(15:37-15:50) = identifier: ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "sql.Node(15:8-15:18) = identifier: ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(17:8-17:18) = identifier: ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(18:19-18:32) = identifier: ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "sql.Node(19:37-19:50) = identifier: ar.account_id": "model.Column(frequency=4) = ?.accounts_revenue.account_id",
    "sql.Node(19:8-19:18) = identifier: ar.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(27:14-27:36) = identifier: contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "sql.Node(27:4-27:11) = identifier: revenue": "model.Column(frequency=2) = ?.?.revenue",
    "sql.Node(28:19-28:41) = identifier: contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "sql.Node(28:4-28:16) = identifier: revenue_core": "model.Column(frequency=1) = ?.?.revenue_core",
    "sql.Node(29:18-29:40) = identifier: contract_duration_days": "model.Column(frequency=3) = ?.?.contract_duration_days",
    "sql.Node(29:4-29:15) = identifier: revenue_aux": "model.Column(frequency=1) = ?.?.revenue_aux",
    "sql.Node(3:9-3:19) = identifier: date_month": "model.Column(frequency=3) = ?.?.date_month",
    "sql.Node(33:13-33:21) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(34:13-34:21) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(36:18-36:37) = identifier: d.contract_end_date": "model.Column(frequency=1) = ?.deals.contract_end_date",
    "sql.Node(36:51-36:72) = identifier: d.contract_start_date": "model.Column(frequency=1) = ?.deals.contract_start_date",
    "sql.Node(37:22-37:31) = identifier: o.product": "model.Column(frequency=2) = ?.orders.product",
    "sql.Node(37:86-37:93) = identifier: o.value": "model.Column(frequency=3) = ?.orders.value",
    "sql.Node(38:22-38:31) = identifier: o.product": "model.Column(frequency=2) = ?.orders.product",
    "sql.Node(38:67-38:74) = identifier: o.value": "model.Column(frequency=3) = ?.orders.value",
    "sql.Node(38:8-38:25) = identifier: accounts.industry": "model.Column(frequency=4) = ?.accounts.industry",
    "sql.Node(39:12-39:19) = identifier: o.value": "model.Column(frequency=3) = ?.orders.value",
    "sql.Node(40:17-40:41) = identifier: accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(41:17-41:41) = identifier: accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(41:57-41:81) = identifier: accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(42:17-42:41) = identifier: accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(45:8-45:32) = identifier: accounts_revenue.revenue": "model.Column(frequency=9) = ?.accounts_revenue.revenue",
    "sql.Node(5:9-5:19) = identifier: date_month": "model.Column(frequency=3) = ?.?.date_month",
    "sql.Node(53:8-53:15) = identifier: t.deals": "model.Column(frequency=1) = ?.t.deals",
    "sql.Node(54:8-54:22) = identifier: t.revenue_core": "model.Column(frequency=1) = ?.t.revenue_core",
    "sql.Node(55:8-55:21) = identifier: t.revenue_aux": "model.Column(frequency=1) = ?.t.revenue_aux",
    "sql.Node(56:8-56:17) = identifier: t.revenue": "model.Column(frequency=1) = ?.t.revenue",
    "sql.Node(6:13-6:21) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(60:13-60:21) = identifier: date_day": "model.Column(frequency=1) = ?.?.date_day",
    "sql.Node(62:14-62:24) = identifier: ds.deal_id": "model.Column(frequency=1) = ?.deals_signed.deal_id",
    "sql.Node(63:12-63:31) = identifier: ds.revenue_core_day": "model.Column(frequency=1) = ?.deals_signed.revenue_core_day",
    "sql.Node(64:12-64:30) = identifier: ds.revenue_aux_day": "model.Column(frequency=1) = ?.deals_signed.revenue_aux_day",
    "sql.Node(65:12-65:26) = identifier: ds.revenue_day": "model.Column(frequency=1) = ?.deals_signed.revenue_day",
    "sql.Node(68:16-68:27) = identifier: dr.date_day": "model.Column(frequency=2) = ?.date_ranges.date_day",
    "sql.Node(68:36-68:58) = identifier: ds.contract_start_date": "model.Column(frequency=1) = ?.deals_signed.contract_start_date",
    "sql.Node(69:16-69:27) = identifier: dr.date_day": "model.Column(frequency=2) = ?.date_ranges.date_day",
    "sql.Node(69:36-69:56) = identifier: ds.contract_end_date": "model.Column(frequency=1) = ?.deals_signed.contract_end_date",
    "sql.Node(7:13-7:21) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(8:13-8:21) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(81:13-81:26) = identifier: t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "sql.Node(82:13-82:26) = identifier: t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "sql.Node(82:37-82:50) = identifier: t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "sql.Node(83:13-83:26) = identifier: t.revenue_12m": "model.Column(frequency=4) = ?.t.revenue_12m",
    "sql.Node(98:17-98:25) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region",
    "sql.Node(99:17-99:25) = identifier: c.region": "model.Column(frequency=9) = ?.countries.region" } }